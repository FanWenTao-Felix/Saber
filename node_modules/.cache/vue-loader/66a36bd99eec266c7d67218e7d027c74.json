{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\system\\user.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\system\\user.vue","mtime":1592365966767},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.box {\n  height: 800px;\n}\n\n.el-scrollbar {\n  height: 100%;\n}\n\n.box .el-scrollbar__wrap {\n  overflow: scroll;\n}\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8uBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"user.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\r\n  <el-row>\r\n    <el-col :span=\"5\">\r\n      <div class=\"box\">\r\n        <el-scrollbar>\r\n          <basic-container>\r\n            <avue-tree :option=\"treeOption\" :data=\"treeData\" @node-click=\"nodeClick\"/>\r\n          </basic-container>\r\n        </el-scrollbar>\r\n      </div>\r\n    </el-col>\r\n    <el-col :span=\"19\">\r\n      <basic-container>\r\n        <avue-crud :option=\"option\"\r\n                   :table-loading=\"loading\"\r\n                   :data=\"data\"\r\n                   ref=\"crud\"\r\n                   v-model=\"form\"\r\n                   :permission=\"permissionList\"\r\n                   @row-del=\"rowDel\"\r\n                   @row-update=\"rowUpdate\"\r\n                   @row-save=\"rowSave\"\r\n                   :before-open=\"beforeOpen\"\r\n                   :page=\"page\"\r\n                   @search-change=\"searchChange\"\r\n                   @search-reset=\"searchReset\"\r\n                   @selection-change=\"selectionChange\"\r\n                   @current-change=\"currentChange\"\r\n                   @size-change=\"sizeChange\"\r\n                   @refresh-change=\"refreshChange\"\r\n                   @on-load=\"onLoad\">\r\n          <template slot=\"menuLeft\">\r\n            <el-button type=\"danger\"\r\n                       size=\"small\"\r\n                       plain\r\n                       icon=\"el-icon-delete\"\r\n                       v-if=\"permission.user_delete\"\r\n                       @click=\"handleDelete\">删 除\r\n            </el-button>\r\n            <el-button type=\"info\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"permission.user_role\"\r\n                       icon=\"el-icon-user\"\r\n                       @click=\"handleGrant\">角色配置\r\n            </el-button>\r\n            <el-button size=\"small\"\r\n                       plain\r\n                       v-if=\"permission.user_reset\"\r\n                       icon=\"el-icon-refresh\"\r\n                       @click=\"handleReset\">密码重置\r\n            </el-button>\r\n            <el-button type=\"success\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"userInfo.role_name.includes('admin')\"\r\n                       icon=\"el-icon-upload2\"\r\n                       @click=\"handleImport\">导入\r\n            </el-button>\r\n            <el-button type=\"warning\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"userInfo.role_name.includes('admin')\"\r\n                       icon=\"el-icon-download\"\r\n                       @click=\"handleExport\">导出\r\n            </el-button>\r\n          </template>\r\n          <template slot-scope=\"{row}\"\r\n                    slot=\"tenantName\">\r\n            <el-tag>{{row.tenantName}}</el-tag>\r\n          </template>\r\n          <template slot-scope=\"{row}\"\r\n                    slot=\"roleName\">\r\n            <el-tag>{{row.roleName}}</el-tag>\r\n          </template>\r\n          <template slot-scope=\"{row}\"\r\n                    slot=\"deptName\">\r\n            <el-tag>{{row.deptName}}</el-tag>\r\n          </template>\r\n        </avue-crud>\r\n        <el-dialog title=\"用户角色配置\"\r\n                   append-to-body\r\n                   :visible.sync=\"roleBox\"\r\n                   width=\"345px\">\r\n\r\n          <el-tree :data=\"roleGrantList\"\r\n                   show-checkbox\r\n                   check-strictly\r\n                   default-expand-all\r\n                   node-key=\"id\"\r\n                   ref=\"treeRole\"\r\n                   :default-checked-keys=\"roleTreeObj\"\r\n                   :props=\"props\">\r\n          </el-tree>\r\n\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"roleBox = false\">取 消</el-button>\r\n            <el-button type=\"primary\"\r\n                       @click=\"submitRole\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n        <el-dialog title=\"用户数据导入\"\r\n                   append-to-body\r\n                   :visible.sync=\"excelBox\"\r\n                   width=\"555px\">\r\n          <avue-form :option=\"excelOption\" v-model=\"excelForm\" :upload-after=\"uploadAfter\">\r\n            <template slot=\"excelTemplate\">\r\n              <el-button type=\"primary\" @click=\"handleTemplate\">\r\n                点击下载<i class=\"el-icon-download el-icon--right\"></i>\r\n              </el-button>\r\n            </template>\r\n          </avue-form>\r\n        </el-dialog>\r\n      </basic-container>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getList,\r\n    getUser,\r\n    remove,\r\n    update,\r\n    add,\r\n    grant,\r\n    resetPassword\r\n  } from \"@/api/system/user\";\r\n  import {getDeptTree, getDeptLazyTree} from \"@/api/system/dept\";\r\n  import {getRoleTree} from \"@/api/system/role\";\r\n  import {getPostList} from \"@/api/system/post\";\r\n  import {mapGetters} from \"vuex\";\r\n  import website from '@/config/website';\r\n  import {getToken} from '@/util/auth';\r\n\r\n  export default {\r\n    data() {\r\n      const validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      const validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.form.password) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        form: {},\r\n        roleBox: false,\r\n        excelBox: false,\r\n        initFlag: true,\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        init: {\r\n          roleTree: [],\r\n          deptTree: [],\r\n        },\r\n        props: {\r\n          label: \"title\",\r\n          value: \"key\"\r\n        },\r\n        roleGrantList: [],\r\n        roleTreeObj: [],\r\n        treeDeptId: '',\r\n        treeData: [],\r\n        treeOption: {\r\n          nodeKey: 'id',\r\n          lazy: true,\r\n          treeLoad: function (node, resolve) {\r\n            const parentId = (node.level === 0) ? 0 : node.data.id;\r\n            getDeptLazyTree(parentId).then(res => {\r\n              resolve(res.data.data.map(item => {\r\n                return {\r\n                  ...item,\r\n                  leaf: !item.hasChildren\r\n                }\r\n              }))\r\n            });\r\n          },\r\n          addBtn: false,\r\n          menu: false,\r\n          size: 'small',\r\n          props: {\r\n            labelText: '标题',\r\n            label: 'title',\r\n            value: 'value',\r\n            children: 'children'\r\n          }\r\n        },\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 180,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          //dialogType: 'drawer',\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"登录账号\",\r\n              prop: \"account\",\r\n              search: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantName\",\r\n              slot: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"用户姓名\",\r\n              prop: \"realName\",\r\n              search: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"所属角色\",\r\n              prop: \"roleName\",\r\n              slot: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"所属部门\",\r\n              prop: \"deptName\",\r\n              slot: true,\r\n              display: false\r\n            },\r\n          ],\r\n          group: [\r\n            {\r\n              label: '基础信息',\r\n              prop: 'baseInfo',\r\n              icon: 'el-icon-user-solid',\r\n              column: [\r\n                {\r\n                  label: \"登录账号\",\r\n                  prop: \"account\",\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入登录账号\",\r\n                    trigger: \"blur\"\r\n                  }],\r\n                  span: website.tenantMode ? 12 : 24,\r\n                },\r\n                {\r\n                  label: \"所属租户\",\r\n                  prop: \"tenantId\",\r\n                  type: \"tree\",\r\n                  dicUrl: \"/api/blade-system/tenant/select\",\r\n                  props: {\r\n                    label: \"tenantName\",\r\n                    value: \"tenantId\"\r\n                  },\r\n                  hide: !website.tenantMode,\r\n                  addDisplay: website.tenantMode,\r\n                  editDisplay: website.tenantMode,\r\n                  viewDisplay: website.tenantMode,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入所属租户\",\r\n                    trigger: \"click\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: '密码',\r\n                  prop: 'password',\r\n                  hide: true,\r\n                  editDisplay: false,\r\n                  viewDisplay: false,\r\n                  rules: [{required: true, validator: validatePass, trigger: 'blur'}]\r\n                },\r\n                {\r\n                  label: '确认密码',\r\n                  prop: 'password2',\r\n                  hide: true,\r\n                  editDisplay: false,\r\n                  viewDisplay: false,\r\n                  rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\r\n                },\r\n              ]\r\n            },\r\n            {\r\n              label: '详细信息',\r\n              prop: 'detailInfo',\r\n              icon: 'el-icon-s-order',\r\n              column: [\r\n                {\r\n                  label: \"用户昵称\",\r\n                  prop: \"name\",\r\n                  hide: true,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入用户昵称\",\r\n                    trigger: \"blur\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"用户姓名\",\r\n                  prop: \"realName\",\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入用户姓名\",\r\n                    trigger: \"blur\"\r\n                  }, {\r\n                    min: 2,\r\n                    max: 5,\r\n                    message: '姓名长度在2到5个字符'\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"手机号码\",\r\n                  prop: \"phone\",\r\n                  overHidden: true\r\n                },\r\n                {\r\n                  label: \"电子邮箱\",\r\n                  prop: \"email\",\r\n                  hide: true,\r\n                  overHidden: true\r\n                },\r\n                {\r\n                  label: \"用户性别\",\r\n                  prop: \"sex\",\r\n                  type: \"select\",\r\n                  dicData: [\r\n                    {\r\n                      label: \"男\",\r\n                      value: 1\r\n                    },\r\n                    {\r\n                      label: \"女\",\r\n                      value: 2\r\n                    },\r\n                    {\r\n                      label: \"未知\",\r\n                      value: 3\r\n                    }\r\n                  ],\r\n                  hide: true\r\n                },\r\n                {\r\n                  label: \"用户生日\",\r\n                  type: \"date\",\r\n                  prop: \"birthday\",\r\n                  format: \"yyyy-MM-dd hh:mm:ss\",\r\n                  valueFormat: \"yyyy-MM-dd hh:mm:ss\",\r\n                  hide: true\r\n                },\r\n                {\r\n                  label: \"账号状态\",\r\n                  prop: \"statusName\",\r\n                  hide: true,\r\n                  display: false\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: '职责信息',\r\n              prop: 'dutyInfo',\r\n              icon: 'el-icon-s-custom',\r\n              column: [\r\n                {\r\n                  label: \"用户编号\",\r\n                  prop: \"code\",\r\n                },\r\n                {\r\n                  label: \"所属角色\",\r\n                  prop: \"roleId\",\r\n                  multiple: true,\r\n                  type: \"tree\",\r\n                  dicData: [],\r\n                  props: {\r\n                    label: \"title\"\r\n                  },\r\n                  checkStrictly: true,\r\n                  slot: true,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请选择所属角色\",\r\n                    trigger: \"click\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"所属部门\",\r\n                  prop: \"deptId\",\r\n                  type: \"tree\",\r\n                  multiple: true,\r\n                  dicData: [],\r\n                  props: {\r\n                    label: \"title\"\r\n                  },\r\n                  checkStrictly: true,\r\n                  slot: true,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请选择所属部门\",\r\n                    trigger: \"click\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"所属岗位\",\r\n                  prop: \"postId\",\r\n                  type: \"tree\",\r\n                  multiple: true,\r\n                  dicData: [],\r\n                  props: {\r\n                    label: \"postName\",\r\n                    value: \"id\"\r\n                  },\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请选择所属岗位\",\r\n                    trigger: \"click\"\r\n                  }],\r\n                },\r\n              ]\r\n            },\r\n          ]\r\n        },\r\n        data: [],\r\n        excelForm: {},\r\n        excelOption: {\r\n          submitBtn: false,\r\n          emptyBtn: false,\r\n          column: [\r\n            {\r\n              label: '模板上传',\r\n              prop: 'excelFile',\r\n              type: 'upload',\r\n              drag: true,\r\n              loadText: '模板上传中，请稍等',\r\n              span: 24,\r\n              propsHttp: {\r\n                res: 'data'\r\n              },\r\n              tip: '请上传 .xls,.xlsx 标准格式文件',\r\n              action: \"/api/blade-user/import-user\"\r\n            },\r\n            {\r\n              label: \"数据覆盖\",\r\n              prop: \"isCovered\",\r\n              type: \"switch\",\r\n              align: \"center\",\r\n              width: 80,\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1\r\n                }\r\n              ],\r\n              value: 0,\r\n              slot: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择是否覆盖\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: '模板下载',\r\n              prop: 'excelTemplate',\r\n              formslot: true,\r\n              span: 24,\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    watch: {\r\n      'form.tenantId'() {\r\n        if (this.form.tenantId !== '' && this.initFlag) {\r\n          this.initData(this.form.tenantId);\r\n        }\r\n      },\r\n      'excelForm.isCovered'() {\r\n        if (this.excelForm.isCovered !== '') {\r\n          const column = this.findObject(this.excelOption.column, \"excelFile\");\r\n          column.action = `/api/blade-user/import-user?isCovered=${this.excelForm.isCovered}`;\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"userInfo\", \"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.user_add, false),\r\n          viewBtn: this.vaildData(this.permission.user_view, false),\r\n          delBtn: this.vaildData(this.permission.user_delete, false),\r\n          editBtn: this.vaildData(this.permission.user_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n    },\r\n    mounted() {\r\n      // 非租户模式默认加载管理组数据\r\n      if (!website.tenantMode) {\r\n        this.initData(website.tenantId);\r\n      }\r\n    },\r\n    methods: {\r\n      nodeClick(data) {\r\n        this.treeDeptId = data.id;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page);\r\n      },\r\n      initData(tenantId) {\r\n        getRoleTree(tenantId).then(res => {\r\n          const column = this.findObject(this.option.group, \"roleId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n        getDeptTree(tenantId).then(res => {\r\n          const column = this.findObject(this.option.group, \"deptId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n        getPostList(tenantId).then(res => {\r\n          const column = this.findObject(this.option.group, \"postId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n      },\r\n      submitRole() {\r\n        const roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\r\n        grant(this.ids, roleList).then(() => {\r\n          this.roleBox = false;\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.onLoad(this.page);\r\n        });\r\n      },\r\n      rowSave(row, done, loading) {\r\n        row.deptId = row.deptId.join(\",\");\r\n        row.roleId = row.roleId.join(\",\");\r\n        row.postId = row.postId.join(\",\");\r\n        add(row).then(() => {\r\n          this.initFlag = false;\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        row.deptId = row.deptId.join(\",\");\r\n        row.roleId = row.roleId.join(\",\");\r\n        row.postId = row.postId.join(\",\");\r\n        update(row).then(() => {\r\n          this.initFlag = false;\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.treeDeptId = '';\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleReset() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return resetPassword(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleGrant() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.roleTreeObj = [];\r\n        if (this.selectionList.length === 1) {\r\n          this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\r\n        }\r\n        getRoleTree().then(res => {\r\n          this.roleGrantList = res.data.data;\r\n          this.roleBox = true;\r\n        });\r\n      },\r\n      handleImport() {\r\n        this.excelBox = true;\r\n      },\r\n      uploadAfter(res, done, loading, column) {\r\n        window.console.log(column);\r\n        this.excelBox = false;\r\n        this.refreshChange();\r\n        done();\r\n      },\r\n      handleExport() {\r\n        this.$confirm(\"是否导出用户数据?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          const searchForm = this.$refs.crud.searchForm;\r\n          window.open(`/api/blade-user/export-user?${this.website.tokenHeader}=${getToken()}&account=${searchForm.account}&realName=${searchForm.realName}`);\r\n        });\r\n      },\r\n      handleTemplate() {\r\n        window.open(`/api/blade-user/export-template?${this.website.tokenHeader}=${getToken()}`);\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getUser(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n            if(this.form.hasOwnProperty(\"deptId\")){\r\n              this.form.deptId = this.form.deptId.split(\",\");\r\n            }\r\n            if(this.form.hasOwnProperty(\"roleId\")){\r\n              this.form.roleId = this.form.roleId.split(\",\");\r\n            }\r\n            if(this.form.hasOwnProperty(\"postId\")){\r\n              this.form.postId = this.form.postId.split(\",\");\r\n            }\r\n          });\r\n        }\r\n        this.initFlag = true;\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query), this.treeDeptId).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .box {\r\n    height: 800px;\r\n  }\r\n\r\n  .el-scrollbar {\r\n    height: 100%;\r\n  }\r\n\r\n  .box .el-scrollbar__wrap {\r\n    overflow: scroll;\r\n  }\r\n</style>\r\n"]}]}