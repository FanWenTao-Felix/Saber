{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\base\\region.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\base\\region.vue","mtime":1592365966755},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.box {\n  height: 800px;\n}\n\n.el-scrollbar {\n  height: 100%;\n}\n\n.box .el-scrollbar__wrap {\n  overflow: scroll;\n}\n",{"version":3,"sources":["region.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqZA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"region.vue","sourceRoot":"src/views/base","sourcesContent":["<template>\r\n  <el-row>\r\n    <el-col :span=\"9\">\r\n      <div class=\"box\">\r\n        <el-scrollbar>\r\n          <basic-container>\r\n            <avue-tree :option=\"treeOption\" :data=\"treeData\" @node-click=\"nodeClick\"/>\r\n          </basic-container>\r\n        </el-scrollbar>\r\n      </div>\r\n    </el-col>\r\n    <el-col :span=\"15\">\r\n      <basic-container>\r\n        <el-button-group>\r\n          <el-button v-if=\"permission.region_add\" type=\"primary\" size=\"small\" icon=\"el-icon-circle-plus-outline\" @click=\"addChildren\">新增下级</el-button>\r\n          <el-button v-if=\"permission.region_delete\" type=\"primary\" size=\"small\" icon=\"el-icon-delete\" @click=\"handleDelete\">删除</el-button>\r\n          <el-button v-if=\"permission.region_import\" type=\"primary\" size=\"small\" icon=\"el-icon-upload2\" @click=\"handleImport\">导入</el-button>\r\n          <el-button v-if=\"permission.region_export\" type=\"primary\" size=\"small\" icon=\"el-icon-download\" @click=\"handleExport\">导出</el-button>\r\n          <el-button v-if=\"permission.region_debug\" type=\"primary\" size=\"small\" icon=\"el-icon-video-play\" @click=\"handleDebug\">调试</el-button>\r\n        </el-button-group>\r\n      </basic-container>\r\n      <basic-container>\r\n        <avue-form ref=\"form\" :option=\"regionOption\" v-model=\"regionForm\" @submit=\"handleSubmit\">\r\n          <template slot=\"code\" slot-scope=\"{}\">\r\n            <el-input placeholder=\"请输入 区划子编号\" v-model=\"regionForm.subCode\">\r\n              <template slot=\"prepend\">{{regionForm.parentCode}}</template>\r\n            </el-input>\r\n          </template>\r\n        </avue-form>\r\n        <el-dialog title=\"行政区划数据导入\"\r\n                   append-to-body\r\n                   :visible.sync=\"excelBox\"\r\n                   width=\"555px\">\r\n          <avue-form :option=\"excelOption\" v-model=\"excelForm\" :upload-after=\"uploadAfter\">\r\n            <template slot=\"excelTemplate\">\r\n              <el-button type=\"primary\" @click=\"handleTemplate\">\r\n                点击下载<i class=\"el-icon-download el-icon--right\"></i>\r\n              </el-button>\r\n            </template>\r\n          </avue-form>\r\n        </el-dialog>\r\n        <el-dialog title=\"行政区划数据调试\"\r\n                   append-to-body\r\n                   :visible.sync=\"debugBox\"\r\n                   width=\"350px\">\r\n          <avue-form :option=\"debugOption\" v-model=\"debugForm\"/>\r\n        </el-dialog>\r\n      </basic-container>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\n  import {getLazyTree, getDetail, submit, remove} from \"@/api/base/region\";\r\n  import {mapGetters} from \"vuex\";\r\n  import {validatenull} from \"@/util/validate\";\r\n  import {getToken} from \"@/util/auth\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        topCode: '00',\r\n        treeCode: '',\r\n        treeParentCode: '',\r\n        treeData: [],\r\n        treeOption: {\r\n          nodeKey: 'id',\r\n          lazy: true,\r\n          treeLoad: function (node, resolve) {\r\n            const parentCode = (node.level === 0) ? \"00\" : node.data.id;\r\n            getLazyTree(parentCode).then(res => {\r\n              resolve(res.data.data.map(item => {\r\n                return {\r\n                  ...item,\r\n                  leaf: !item.hasChildren\r\n                }\r\n              }))\r\n            });\r\n          },\r\n          addBtn: false,\r\n          menu: false,\r\n          size: 'small',\r\n          props: {\r\n            labelText: '标题',\r\n            label: 'title',\r\n            value: 'value',\r\n            children: 'children'\r\n          }\r\n        },\r\n        regionForm: {},\r\n        regionOption: {\r\n          labelWidth: 100,\r\n          column: [\r\n            {\r\n              label: \"父区划编号\",\r\n              prop: \"parentCode\",\r\n              span: 24,\r\n              disabled: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入父区划编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"父区划名称\",\r\n              prop: \"parentName\",\r\n              span: 24,\r\n              disabled: true,\r\n            },\r\n            {\r\n              label: \"区划编号\",\r\n              prop: \"code\",\r\n              formslot: true,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入区划编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"区划子编号\",\r\n              prop: \"subCode\",\r\n              display: false,\r\n            },\r\n            {\r\n              label: \"区划名称\",\r\n              prop: \"name\",\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入区划名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"区划等级\",\r\n              prop: \"level\",\r\n              type: \"radio\",\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=region\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择区划等级\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"区划排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入区划排序\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"区划备注\",\r\n              prop: \"remark\",\r\n              type: \"textarea\",\r\n              minRows: 6,\r\n              span: 24,\r\n            },\r\n          ]\r\n        },\r\n        excelBox: false,\r\n        excelForm: {},\r\n        excelOption: {\r\n          submitBtn: false,\r\n          emptyBtn: false,\r\n          column: [\r\n            {\r\n              label: '模板上传',\r\n              prop: 'excelFile',\r\n              type: 'upload',\r\n              drag: true,\r\n              loadText: '模板上传中，请稍等',\r\n              span: 24,\r\n              propsHttp: {\r\n                res: 'data'\r\n              },\r\n              tip: '请上传 .xls,.xlsx 标准格式文件',\r\n              action: \"/api/blade-system/region/import-region\"\r\n            },\r\n            {\r\n              label: \"数据覆盖\",\r\n              prop: \"isCovered\",\r\n              type: \"switch\",\r\n              align: \"center\",\r\n              width: 80,\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1\r\n                }\r\n              ],\r\n              value: 0,\r\n              slot: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择是否覆盖\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: '模板下载',\r\n              prop: 'excelTemplate',\r\n              formslot: true,\r\n              span: 24,\r\n            }\r\n          ]\r\n        },\r\n        debugBox: false,\r\n        debugForm: {},\r\n        debugOption: {\r\n          labelWidth: 50,\r\n          submitBtn: false,\r\n          emptyBtn: false,\r\n          column: [\r\n            {\r\n              label: '省份',\r\n              prop: 'province',\r\n              type: 'select',\r\n              props: {\r\n                label: 'name',\r\n                value: 'code'\r\n              },\r\n              cascaderItem: ['city', 'district'],\r\n              dicUrl: '/api/blade-system/region/select',\r\n              span: 24,\r\n            },\r\n            {\r\n              label: '地市',\r\n              prop: 'city',\r\n              type: 'select',\r\n              props: {\r\n                label: 'name',\r\n                value: 'code'\r\n              },\r\n              dicFlag: false,\r\n              dicUrl: '/api/blade-system/region/select?code={{key}}',\r\n              span: 24,\r\n            },\r\n            {\r\n              label: '区县',\r\n              prop: 'district',\r\n              type: 'select',\r\n              props: {\r\n                label: 'name',\r\n                value: 'code'\r\n              },\r\n              dicFlag: false,\r\n              dicUrl: '/api/blade-system/region/select?code={{key}}',\r\n              span: 24,\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    watch: {\r\n      'regionForm.subCode'() {\r\n        this.regionForm.code = this.regionForm.parentCode + this.regionForm.subCode;\r\n      },\r\n      'excelForm.isCovered'() {\r\n        if (this.excelForm.isCovered !== '') {\r\n          const column = this.findObject(this.excelOption.column, \"excelFile\");\r\n          column.action = `/api/blade-system/region/import-region?isCovered=${this.excelForm.isCovered}`;\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.region_add, false),\r\n          viewBtn: this.vaildData(this.permission.region_view, false),\r\n          delBtn: this.vaildData(this.permission.region_delete, false),\r\n          editBtn: this.vaildData(this.permission.region_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      initTree() {\r\n        this.treeData = [];\r\n        getLazyTree(this.topCode).then(res => {\r\n          this.treeData = res.data.data.map(item => {\r\n            return {\r\n              ...item,\r\n              leaf: !item.hasChildren\r\n            }\r\n          })\r\n        });\r\n      },\r\n      nodeClick(data) {\r\n        const column = this.findObject(this.regionOption.column, \"parentCode\");\r\n        column.disabled = true;\r\n        this.treeCode = data.id;\r\n        this.treeParentCode = data.parentId;\r\n        getDetail(this.treeCode).then(res => {\r\n          this.regionForm = res.data.data;\r\n          this.regionForm.subCode = this.regionForm.code.replace(this.regionForm.parentCode, '');\r\n        })\r\n      },\r\n      addChildren() {\r\n        if (validatenull(this.regionForm.code) || validatenull(this.regionForm.name)) {\r\n          this.$message.warning(\"请先选择一项区划\");\r\n          return;\r\n        }\r\n        this.regionForm.parentCode = this.regionForm.code;\r\n        this.regionForm.parentName = this.regionForm.name;\r\n        this.regionForm.code = '';\r\n        this.regionForm.subCode = '';\r\n        this.regionForm.name = '';\r\n        this.regionForm.level = (this.regionForm.level === 5) ? 5 : this.regionForm.level + 1;\r\n      },\r\n      handleSubmit(form, done, loading) {\r\n        const parentCode = form.parentCode === this.topCode ? '' : form.parentCode;\r\n        form.code = parentCode + form.subCode;\r\n        submit(form).then(() => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.initTree();\r\n          this.regionForm.subCode = '';\r\n          this.$refs.form.resetForm();\r\n          done();\r\n        }, error => {\r\n          loading();\r\n          window.console.log(error);\r\n        });\r\n      },\r\n      handleDelete() {\r\n        if (validatenull(this.regionForm.code)) {\r\n          this.$message.warning(\"请先选择一项区划\");\r\n          return;\r\n        }\r\n        this.$confirm(`确定将 [${this.regionForm.name}] 数据删除?`, {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.treeCode);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.initTree();\r\n            this.regionForm.subCode = '';\r\n            this.$refs.form.resetForm();\r\n          });\r\n      },\r\n      uploadAfter(res, done, loading, column) {\r\n        window.console.log(column);\r\n        this.excelBox = false;\r\n        this.initTree();\r\n        done();\r\n      },\r\n      handleDebug() {\r\n        this.debugBox = true;\r\n      },\r\n      handleImport() {\r\n        this.excelBox = true;\r\n      },\r\n      handleExport() {\r\n        this.$confirm(\"是否导出行政区划数据?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          window.open(`/api/blade-system/region/export-region?${this.website.tokenHeader}=${getToken()}`);\r\n        });\r\n      },\r\n      handleTemplate() {\r\n        window.open(`/api/blade-system/region/export-template?${this.website.tokenHeader}=${getToken()}`);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .box {\r\n    height: 800px;\r\n  }\r\n\r\n  .el-scrollbar {\r\n    height: 100%;\r\n  }\r\n\r\n  .box .el-scrollbar__wrap {\r\n    overflow: scroll;\r\n  }\r\n</style>\r\n"]}]}