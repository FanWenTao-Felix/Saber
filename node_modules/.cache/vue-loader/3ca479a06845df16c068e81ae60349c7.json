{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\page\\index\\top\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\page\\index\\top\\index.vue","mtime":1592365966721},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {resetRouter} from '@/router/router'\nimport {mapGetters, mapState} from \"vuex\";\nimport {fullscreenToggel, listenfullscreen} from \"@/util/util\";\nimport topLock from \"./top-lock\";\nimport topMenu from \"./top-menu\";\nimport topSearch from \"./top-search\";\nimport topTheme from \"./top-theme\";\nimport topLogs from \"./top-logs\";\nimport topColor from \"./top-color\";\nimport topNotice from './top-notice'\nimport topLang from \"./top-lang\";\n\nexport default {\n  components: {\n    topLock,\n    topMenu,\n    topSearch,\n    topTheme,\n    topLogs,\n    topColor,\n    topNotice,\n    topLang\n  },\n  name: \"top\",\n  data() {\n    return {};\n  },\n  filters: {},\n  created() {\n  },\n  mounted() {\n    listenfullscreen(this.setScreen);\n  },\n  computed: {\n    ...mapState({\n      showDebug: state => state.common.showDebug,\n      showTheme: state => state.common.showTheme,\n      showLock: state => state.common.showLock,\n      showFullScren: state => state.common.showFullScren,\n      showCollapse: state => state.common.showCollapse,\n      showSearch: state => state.common.showSearch,\n      showMenu: state => state.common.showMenu,\n      showColor: state => state.common.showColor\n    }),\n    ...mapGetters([\n      \"userInfo\",\n      \"isFullScren\",\n      \"tagWel\",\n      \"tagList\",\n      \"isCollapse\",\n      \"tag\",\n      \"logsLen\",\n      \"logsFlag\"\n    ])\n  },\n  methods: {\n    handleScreen() {\n      fullscreenToggel();\n    },\n    setCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\");\n    },\n    setScreen() {\n      this.$store.commit(\"SET_FULLSCREN\");\n    },\n    logout() {\n      this.$confirm(this.$t(\"logoutTip\"), this.$t(\"tip\"), {\n        confirmButtonText: this.$t(\"submitText\"),\n        cancelButtonText: this.$t(\"cancelText\"),\n        type: \"warning\"\n      }).then(() => {\n        this.$store.dispatch(\"LogOut\").then(() => {\n          resetRouter();\n          this.$router.push({path: \"/login\"});\n        });\n      });\n    }\n  }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\r\n  <div class=\"avue-top\">\r\n    <div class=\"top-bar__left\">\r\n      <div class=\"avue-breadcrumb\"\r\n           :class=\"[{ 'avue-breadcrumb--active': isCollapse }]\"\r\n           v-if=\"showCollapse\">\r\n        <i class=\"icon-navicon\"\r\n           @click=\"setCollapse\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"top-bar__title\">\r\n      <div class=\"top-bar__item top-bar__item--show\"\r\n           v-if=\"showMenu\">\r\n        <top-menu ref=\"topMenu\"></top-menu>\r\n      </div>\r\n      <span class=\"top-bar__item\"\r\n            v-if=\"showSearch\">\r\n        <top-search></top-search>\r\n      </span>\r\n    </div>\r\n    <div class=\"top-bar__right\">\r\n      <el-tooltip v-if=\"showColor\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.color')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-color></top-color>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showDebug\"\r\n                  effect=\"dark\"\r\n                  :content=\"logsFlag?$t('navbar.bug'):logsLen+$t('navbar.bugs')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-logs></top-logs>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showLock\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.lock')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-lock></top-lock>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showTheme\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.theme')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item top-bar__item--show\">\r\n          <top-theme></top-theme>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\"\r\n                  :content=\"$t('navbar.notice')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item top-bar__item--show\">\r\n          <top-notice></top-notice>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\"\r\n                  :content=\"$t('navbar.language')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item top-bar__item--show\">\r\n          <top-lang></top-lang>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showFullScren\"\r\n                  effect=\"dark\"\r\n                  :content=\"isFullScren?$t('navbar.screenfullF'):$t('navbar.screenfull')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <i :class=\"isFullScren?'icon-tuichuquanping':'icon-quanping'\"\r\n             @click=\"handleScreen\"></i>\r\n        </div>\r\n      </el-tooltip>\r\n      <img class=\"top-bar__img\"\r\n           :src=\"userInfo.avatar\">\r\n      <el-dropdown>\r\n        <span class=\"el-dropdown-link\">\r\n          {{userInfo.userName}}\r\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n        </span>\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item>\r\n            <router-link to=\"/\">{{$t('navbar.dashboard')}}</router-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item>\r\n            <router-link to=\"/info/index\">{{$t('navbar.userinfo')}}</router-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item @click.native=\"logout\"\r\n                            divided>{{$t('navbar.logOut')}}\r\n          </el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {resetRouter} from '@/router/router'\r\n  import {mapGetters, mapState} from \"vuex\";\r\n  import {fullscreenToggel, listenfullscreen} from \"@/util/util\";\r\n  import topLock from \"./top-lock\";\r\n  import topMenu from \"./top-menu\";\r\n  import topSearch from \"./top-search\";\r\n  import topTheme from \"./top-theme\";\r\n  import topLogs from \"./top-logs\";\r\n  import topColor from \"./top-color\";\r\n  import topNotice from './top-notice'\r\n  import topLang from \"./top-lang\";\r\n\r\n  export default {\r\n    components: {\r\n      topLock,\r\n      topMenu,\r\n      topSearch,\r\n      topTheme,\r\n      topLogs,\r\n      topColor,\r\n      topNotice,\r\n      topLang\r\n    },\r\n    name: \"top\",\r\n    data() {\r\n      return {};\r\n    },\r\n    filters: {},\r\n    created() {\r\n    },\r\n    mounted() {\r\n      listenfullscreen(this.setScreen);\r\n    },\r\n    computed: {\r\n      ...mapState({\r\n        showDebug: state => state.common.showDebug,\r\n        showTheme: state => state.common.showTheme,\r\n        showLock: state => state.common.showLock,\r\n        showFullScren: state => state.common.showFullScren,\r\n        showCollapse: state => state.common.showCollapse,\r\n        showSearch: state => state.common.showSearch,\r\n        showMenu: state => state.common.showMenu,\r\n        showColor: state => state.common.showColor\r\n      }),\r\n      ...mapGetters([\r\n        \"userInfo\",\r\n        \"isFullScren\",\r\n        \"tagWel\",\r\n        \"tagList\",\r\n        \"isCollapse\",\r\n        \"tag\",\r\n        \"logsLen\",\r\n        \"logsFlag\"\r\n      ])\r\n    },\r\n    methods: {\r\n      handleScreen() {\r\n        fullscreenToggel();\r\n      },\r\n      setCollapse() {\r\n        this.$store.commit(\"SET_COLLAPSE\");\r\n      },\r\n      setScreen() {\r\n        this.$store.commit(\"SET_FULLSCREN\");\r\n      },\r\n      logout() {\r\n        this.$confirm(this.$t(\"logoutTip\"), this.$t(\"tip\"), {\r\n          confirmButtonText: this.$t(\"submitText\"),\r\n          cancelButtonText: this.$t(\"cancelText\"),\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          this.$store.dispatch(\"LogOut\").then(() => {\r\n            resetRouter();\r\n            this.$router.push({path: \"/login\"});\r\n          });\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"]}]}