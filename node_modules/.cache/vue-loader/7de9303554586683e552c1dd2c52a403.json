{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\flow\\model.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\flow\\model.vue","mtime":1592365966758},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.none-border {\n  border: 0;\n  background-color: transparent !important;\n}\n",{"version":3,"sources":["model.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6YA;AACA;AACA;AACA","file":"model.vue","sourceRoot":"src/views/flow","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :page=\"page\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-circle-plus\"\r\n                   v-if=\"permission.flow_model_create\"\r\n                   plain\r\n                   @click=\"handleCreate\">创 建\r\n        </el-button>\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   v-if=\"permission.flow_model_delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.flow_model_update\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleUpdate(scope.row,scope.index)\">配置\r\n        </el-button>\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.flow_model_deploy\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleDeploy(scope.row,scope.index)\">部署\r\n        </el-button>\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.flow_model_download\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleDownload(scope.row,scope.index)\">下载\r\n        </el-button>\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.flow_model_delete\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleSlotDelete(scope.row,scope.index)\">删除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"version\">\r\n        <el-tag>v{{row.version}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"流程配置\"\r\n               append-to-body\r\n               :visible.sync=\"flowBox\"\r\n               :fullscreen=\"true\">\r\n      <iframe\r\n        :src=flowUrl\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        title=\"流程设计器\"\r\n        frameBorder=\"no\"\r\n        border=\"0\"\r\n        marginWidth=\"0\"\r\n        marginHeight=\"0\"\r\n        scrolling=\"no\"\r\n        allowTransparency=\"yes\">\r\n      </iframe>\r\n      <span slot=\"footer\"\r\n            class=\"dialog-footer\">\r\n        <el-button @click=\"flowBox = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleRefresh\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-dialog title=\"流程部署\"\r\n               append-to-body\r\n               :visible.sync=\"deployBox\"\r\n               width=\"20%\">\r\n      <avue-form ref=\"form\" :option=\"optionDeploy\" v-model=\"form\" @submit=\"handleSubmit\"/>\r\n      <span slot=\"footer\"\r\n            class=\"dialog-footer\">\r\n        <el-button @click=\"deployBox = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleDoDeploy\" :loading=\"deployLoading\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {mapGetters} from \"vuex\";\r\n  import website from '@/config/website';\r\n  import {modelList, removeModel, deployModel} from \"@/api/flow/flow\";\r\n  import {flowCategory} from \"@/util/flow\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        optionDeploy: {\r\n          menuBtn: false,\r\n          column: [\r\n            {\r\n              label: \"流程类型\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              slot: true,\r\n              prop: \"categoryValue\",\r\n              search: true,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择流程类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"流程模式\",\r\n              prop: \"flowMode\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"通用流程\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"定制流程\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              value: 1,\r\n              span: 24,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择流程模式',\r\n                  trigger: 'blur'\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantId\",\r\n              type: \"tree\",\r\n              multiple: true,\r\n              dicUrl: \"/api/blade-system/tenant/select\",\r\n              props: {\r\n                label: \"tenantName\",\r\n                value: \"tenantId\"\r\n              },\r\n              display: false,\r\n              span: 24,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择所属租户',\r\n                  trigger: 'blur'\r\n                }\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        selectionId: '',\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        deployLoading: false,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        deployBox: false,\r\n        flowBox: false,\r\n        flowUrl: '',\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          editBtn: false,\r\n          addBtn: false,\r\n          viewBtn: false,\r\n          delBtn: false,\r\n          dialogWidth: 900,\r\n          menuWidth: 150,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: '模型主键',\r\n              prop: 'id',\r\n            },\r\n            {\r\n              label: '模型标识',\r\n              prop: 'modelKey',\r\n              search: true,\r\n              width: 150,\r\n            },\r\n            {\r\n              label: '模型名称',\r\n              prop: 'name',\r\n              search: true,\r\n              width: 150,\r\n            },\r\n            {\r\n              label: '流程版本',\r\n              prop: 'version',\r\n              slot: true,\r\n              width: 80,\r\n            },\r\n            {\r\n              label: '创建时间',\r\n              prop: 'created',\r\n              width: 165,\r\n            },\r\n            {\r\n              label: '更新时间',\r\n              prop: 'lastUpdated',\r\n              width: 165,\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    watch: {\r\n      'form.flowMode'() {\r\n        this.$refs.form.option.column.filter(item => {\r\n          if (item.prop === \"tenantId\") {\r\n            item.display = this.form.flowMode === 2;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      handleSubmit(form, done) {\r\n        this.deployLoading = true;\r\n        deployModel({\r\n          modelId: this.selectionId,\r\n          category: flowCategory(form.categoryValue),\r\n          tenantIds: form.tenantId.join(\",\")\r\n        }).then(res => {\r\n          const data = res.data;\r\n          if (data.success) {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: data.msg\r\n            });\r\n            done();\r\n            this.$refs.form.resetForm();\r\n            this.deployBox = false;\r\n            this.deployLoading = false;\r\n          } else {\r\n            done();\r\n            this.deployLoading = false;\r\n            this.$message({\r\n              type: \"warn\",\r\n              message: data.msg\r\n            });\r\n          }\r\n        })\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeModel(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n            this.onLoad(this.page);\r\n          });\r\n      },\r\n      handleCreate() {\r\n        this.flowUrl = `${website.flowDesignUrl}/index.html`;\r\n        this.flowBox = true;\r\n      },\r\n      handleUpdate(row) {\r\n        this.flowUrl = `${website.flowDesignUrl}/index.html#/editor/${row.id}`;\r\n        this.flowBox = true;\r\n      },\r\n      handleDeploy(row) {\r\n        this.deployBox = true;\r\n        this.selectionId = row.id;\r\n      },\r\n      handleDoDeploy() {\r\n        this.$refs.form.submit();\r\n      },\r\n      handleDownload(row) {\r\n        window.open(`${website.flowDesignUrl}/app/rest/models/${row.id}/bpmn20`);\r\n      },\r\n      handleSlotDelete(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeModel(row.id);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n            this.onLoad(this.page);\r\n          });\r\n      },\r\n      handleRefresh() {\r\n        this.flowBox = false;\r\n        this.onLoad(this.page);\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        modelList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .none-border {\r\n    border: 0;\r\n    background-color: transparent !important;\r\n  }\r\n</style>\r\n"]}]}