{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\authority\\apiscope.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\authority\\apiscope.vue","mtime":1592365966753},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  add,\n  remove,\n  update,\n  getLazyMenuList,\n  getMenu\n} from \"@/api/system/menu\";\nimport {\n  addApiScope,\n  removeApiScope,\n  updateApiScope,\n  getListApiScope,\n  getMenuApiScope\n} from \"@/api/system/scope\";\nimport {mapGetters} from \"vuex\";\nimport iconList from \"@/config/iconList\";\n\nexport default {\n  data() {\n    return {\n      form: {},\n      selectionList: [],\n      query: {},\n      loading: true,\n      parentId: 0,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      drawerVisible: false,\n      direction: 'rtl',\n      scopeLoading: false,\n      scopeMenuId: 0,\n      scopeMenuName: \"菜单\",\n      menu: true,\n      option: {\n        lazy: true,\n        tip: false,\n        simplePage: true,\n        searchShow: true,\n        searchMenuSpan: 6,\n        dialogWidth: \"60%\",\n        tree: true,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: false,\n        editBtn: false,\n        addBtn: false,\n        delBtn: false,\n        menuWidth: 150,\n        dialogClickModal: false,\n        column: [\n          {\n            label: \"菜单名称\",\n            prop: \"name\",\n            search: true,\n            rules: [\n              {\n                required: true,\n                message: \"请输入菜单名称\",\n                trigger: \"blur\"\n              }\n            ]\n          },\n          {\n            label: \"路由地址\",\n            prop: \"path\",\n            rules: [\n              {\n                required: true,\n                message: \"请输入路由地址\",\n                trigger: \"blur\"\n              }\n            ]\n          },\n          {\n            label: \"上级菜单\",\n            prop: \"parentId\",\n            type: \"tree\",\n            dicUrl: \"/api/blade-system/menu/tree\",\n            hide: true,\n            props: {\n              label: \"title\"\n            },\n            rules: [\n              {\n                required: false,\n                message: \"请选择上级菜单\",\n                trigger: \"click\"\n              }\n            ]\n          },\n          {\n            label: \"菜单图标\",\n            prop: \"source\",\n            type: \"icon-select\",\n            slot: true,\n            width: 80,\n            iconList: iconList,\n            rules: [\n              {\n                required: true,\n                message: \"请输入菜单图标\",\n                trigger: \"click\"\n              }\n            ]\n          },\n          {\n            label: \"菜单编号\",\n            prop: \"code\",\n            search: true,\n            rules: [\n              {\n                required: true,\n                message: \"请输入菜单编号\",\n                trigger: \"blur\"\n              }\n            ]\n          },\n          {\n            label: \"菜单类型\",\n            prop: \"category\",\n            type: \"radio\",\n            dicData: [\n              {\n                label: \"菜单\",\n                value: 1\n              },\n              {\n                label: \"按钮\",\n                value: 2\n              }\n            ],\n            hide: true,\n            rules: [\n              {\n                required: true,\n                message: \"请选择菜单类型\",\n                trigger: \"blur\"\n              }\n            ]\n          },\n          {\n            label: \"菜单别名\",\n            prop: \"alias\",\n            rules: [\n              {\n                required: true,\n                message: \"请输入菜单别名\",\n                trigger: \"blur\"\n              }\n            ]\n          },\n          {\n            label: \"按钮功能\",\n            prop: \"action\",\n            type: \"radio\",\n            dicData: [\n              {\n                label: \"工具栏\",\n                value: 0\n              },\n              {\n                label: \"操作栏\",\n                value: 1\n              },\n              {\n                label: \"工具操作栏\",\n                value: 2\n              }\n            ],\n            hide: true,\n            rules: [\n              {\n                required: true,\n                message: \"请选择按钮功能\",\n                trigger: \"blur\"\n              }\n            ]\n          },\n          {\n            label: \"菜单排序\",\n            prop: \"sort\",\n            type: \"number\",\n            width: 80,\n            rules: [\n              {\n                required: true,\n                message: \"请输入菜单排序\",\n                trigger: \"blur\"\n              }\n            ]\n          },\n          {\n            label: \"新窗口\",\n            prop: \"isOpen\",\n            type: \"radio\",\n            dicData: [\n              {\n                label: \"否\",\n                value: 0\n              },\n              {\n                label: \"是\",\n                value: 1\n              },\n            ],\n            hide: true\n          },\n          {\n            label: \"菜单备注\",\n            prop: \"remark\",\n            type: \"textarea\",\n            span: 24,\n            minRows: 6,\n            hide: true\n          }\n        ]\n      },\n      data: [],\n      formScope: {},\n      selectionListScope: [],\n      pageScope: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      optionScope: {\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        menuWidth: 200,\n        dialogWidth: 900,\n        dialogClickModal: false,\n        column: [\n          {\n            label: \"权限名称\",\n            prop: \"scopeName\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入数据权限名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"权限编号\",\n            prop: \"resourceCode\",\n            search: true,\n            width: 180,\n            rules: [{\n              required: true,\n              message: \"请输入数据权限编号\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"权限路径\",\n            prop: \"scopePath\",\n            width: 180,\n            rules: [{\n              required: true,\n              message: \"请输入数据权限编号\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"接口类型\",\n            type: \"select\",\n            dicUrl: \"/api/blade-system/dict/dictionary?code=api_scope_type\",\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            dataType: \"number\",\n            slot: true,\n            width: 100,\n            prop: \"scopeType\",\n            rules: [{\n              required: true,\n              message: \"请输入通知类型\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"备注\",\n            prop: \"remark\",\n            span: 24,\n            hide: true,\n          },\n        ]\n      },\n      dataScope: []\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.menu_add, false),\n        viewBtn: this.vaildData(this.permission.menu_view, false),\n        delBtn: this.vaildData(this.permission.menu_delete, false),\n        editBtn: this.vaildData(this.permission.menu_edit, false)\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n    scopeIds() {\n      let ids = [];\n      this.selectionListScope.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    // 菜单管理模块\n    rowSave(row, done, loading) {\n      add(row).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate(row, index, done, loading) {\n      update(row).then(() => {\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    searchReset() {\n      this.query = {};\n      this.parentId = 0;\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.parentId = '';\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        getMenu(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getLazyMenuList(this.parentId, Object.assign(params, this.query)).then(res => {\n        this.data = res.data.data;\n        this.loading = false;\n        this.selectionClear();\n      });\n    },\n    treeLoad(tree, treeNode, resolve) {\n      const parentId = tree.id;\n      getLazyMenuList(parentId).then(res => {\n        resolve(res.data.data);\n      });\n    },\n    // 数据权限模块\n    handleDataScope(row) {\n      this.drawerVisible = true;\n      this.scopeMenuId = row.id;\n      this.scopeMenuName = row.name;\n      this.onLoadScope(this.pageScope)\n    },\n    handleDrawerClose(hide) {\n      hide();\n    },\n    rowSaveScope(row, done, loading) {\n      row = {\n        ...row,\n        menuId: this.scopeMenuId,\n      };\n      addApiScope(row).then(() => {\n        this.onLoadScope(this.pageScope);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdateScope(row, index, done, loading) {\n      row = {\n        ...row,\n        menuId: this.scopeMenuId,\n      };\n      updateApiScope(row).then(() => {\n        this.onLoadScope(this.pageScope);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        done();\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDelScope(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return removeApiScope(row.id);\n        })\n        .then(() => {\n          this.onLoadScope(this.pageScope);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDeleteScope() {\n      if (this.selectionListScope.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return removeApiScope(this.scopeIds);\n        })\n        .then(() => {\n          this.onLoadScope(this.pageScope);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crudScope.toggleSelection();\n        });\n    },\n    beforeOpenScope(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        getMenuApiScope(this.formScope.id).then(res => {\n          this.formScope = res.data.data;\n        });\n      }\n      done();\n    },\n    searchResetScope() {\n      this.onLoadScope(this.pageScope);\n    },\n    searchChangeScope(params, done) {\n      this.onLoadScope(this.pageScope, params);\n      done();\n    },\n    selectionChangeScope(list) {\n      this.selectionListScope = list;\n    },\n    currentChangeScope(currentPage) {\n      this.pageScope.currentPage = currentPage;\n    },\n    sizeChangeScope(pageSize) {\n      this.pageScope.pageSize = pageSize;\n    },\n    onLoadScope(page, params = {}) {\n      this.scopeLoading = true;\n      const values = {\n        ...params,\n        menuId: this.scopeMenuId,\n      }\n      getListApiScope(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(res => {\n        const data = res.data.data;\n        this.pageScope.total = data.total;\n        this.dataScope = data.records;\n        this.selectionListScope = [];\n        this.scopeLoading = false;\n      });\n    },\n  }\n};\n",{"version":3,"sources":["apiscope.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"apiscope.vue","sourceRoot":"src/views/authority","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               @row-del=\"rowDel\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\"\r\n               @tree-load=\"treeLoad\">\r\n      <template slot-scope=\"{row}\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   icon=\"el-icon-setting\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.api_scope_setting\"\r\n                   plain\r\n                   style=\"border: 0;background-color: transparent !important;\"\r\n                   @click.stop=\"handleDataScope(row)\">权限配置\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"source\">\r\n        <div style=\"text-align:center\">\r\n          <i :class=\"row.source\"/>\r\n        </div>\r\n      </template>\r\n    </avue-crud>\r\n    <el-drawer :title=\"`[${scopeMenuName}] 接口权限配置`\" :visible.sync=\"drawerVisible\" :direction=\"direction\"\r\n               append-to-body\r\n               :before-close=\"handleDrawerClose\" size=\"1000px\">\r\n      <basic-container>\r\n        <avue-crud :option=\"optionScope\"\r\n                   :data=\"dataScope\"\r\n                   :page=\"pageScope\"\r\n                   v-model=\"formScope\"\r\n                   :table-loading=\"scopeLoading\"\r\n                   ref=\"crudScope\"\r\n                   @row-del=\"rowDelScope\"\r\n                   @row-update=\"rowUpdateScope\"\r\n                   @row-save=\"rowSaveScope\"\r\n                   :before-open=\"beforeOpenScope\"\r\n                   @search-change=\"searchChangeScope\"\r\n                   @search-reset=\"searchResetScope\"\r\n                   @selection-change=\"selectionChangeScope\"\r\n                   @current-change=\"currentChangeScope\"\r\n                   @size-change=\"sizeChangeScope\"\r\n                   @on-load=\"onLoadScope\">\r\n          <template slot=\"menuLeft\">\r\n            <el-button type=\"danger\"\r\n                       size=\"small\"\r\n                       icon=\"el-icon-delete\"\r\n                       plain\r\n                       @click=\"handleDeleteScope\">删 除\r\n            </el-button>\r\n          </template>\r\n          <template slot-scope=\"{row}\"\r\n                    slot=\"scopeType\">\r\n            <el-tag>{{row.scopeTypeName}}</el-tag>\r\n          </template>\r\n        </avue-crud>\r\n      </basic-container>\r\n    </el-drawer>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    add,\r\n    remove,\r\n    update,\r\n    getLazyMenuList,\r\n    getMenu\r\n  } from \"@/api/system/menu\";\r\n  import {\r\n    addApiScope,\r\n    removeApiScope,\r\n    updateApiScope,\r\n    getListApiScope,\r\n    getMenuApiScope\r\n  } from \"@/api/system/scope\";\r\n  import {mapGetters} from \"vuex\";\r\n  import iconList from \"@/config/iconList\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        parentId: 0,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        drawerVisible: false,\r\n        direction: 'rtl',\r\n        scopeLoading: false,\r\n        scopeMenuId: 0,\r\n        scopeMenuName: \"菜单\",\r\n        menu: true,\r\n        option: {\r\n          lazy: true,\r\n          tip: false,\r\n          simplePage: true,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          dialogWidth: \"60%\",\r\n          tree: true,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: false,\r\n          editBtn: false,\r\n          addBtn: false,\r\n          delBtn: false,\r\n          menuWidth: 150,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"菜单名称\",\r\n              prop: \"name\",\r\n              search: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单名称\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"路由地址\",\r\n              prop: \"path\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入路由地址\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"上级菜单\",\r\n              prop: \"parentId\",\r\n              type: \"tree\",\r\n              dicUrl: \"/api/blade-system/menu/tree\",\r\n              hide: true,\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              rules: [\r\n                {\r\n                  required: false,\r\n                  message: \"请选择上级菜单\",\r\n                  trigger: \"click\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单图标\",\r\n              prop: \"source\",\r\n              type: \"icon-select\",\r\n              slot: true,\r\n              width: 80,\r\n              iconList: iconList,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单图标\",\r\n                  trigger: \"click\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单编号\",\r\n              prop: \"code\",\r\n              search: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单编号\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单类型\",\r\n              prop: \"category\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"菜单\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"按钮\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              hide: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择菜单类型\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单别名\",\r\n              prop: \"alias\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单别名\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"按钮功能\",\r\n              prop: \"action\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"工具栏\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"操作栏\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"工具操作栏\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              hide: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择按钮功能\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              width: 80,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单排序\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"新窗口\",\r\n              prop: \"isOpen\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1\r\n                },\r\n              ],\r\n              hide: true\r\n            },\r\n            {\r\n              label: \"菜单备注\",\r\n              prop: \"remark\",\r\n              type: \"textarea\",\r\n              span: 24,\r\n              minRows: 6,\r\n              hide: true\r\n            }\r\n          ]\r\n        },\r\n        data: [],\r\n        formScope: {},\r\n        selectionListScope: [],\r\n        pageScope: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        optionScope: {\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          menuWidth: 200,\r\n          dialogWidth: 900,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"权限名称\",\r\n              prop: \"scopeName\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入数据权限名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"权限编号\",\r\n              prop: \"resourceCode\",\r\n              search: true,\r\n              width: 180,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入数据权限编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"权限路径\",\r\n              prop: \"scopePath\",\r\n              width: 180,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入数据权限编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"接口类型\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=api_scope_type\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              slot: true,\r\n              width: 100,\r\n              prop: \"scopeType\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入通知类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              span: 24,\r\n              hide: true,\r\n            },\r\n          ]\r\n        },\r\n        dataScope: []\r\n      };\r\n    },\r\n\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.menu_add, false),\r\n          viewBtn: this.vaildData(this.permission.menu_view, false),\r\n          delBtn: this.vaildData(this.permission.menu_delete, false),\r\n          editBtn: this.vaildData(this.permission.menu_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n      scopeIds() {\r\n        let ids = [];\r\n        this.selectionListScope.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      // 菜单管理模块\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.parentId = 0;\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.parentId = '';\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getMenu(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getLazyMenuList(this.parentId, Object.assign(params, this.query)).then(res => {\r\n          this.data = res.data.data;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      treeLoad(tree, treeNode, resolve) {\r\n        const parentId = tree.id;\r\n        getLazyMenuList(parentId).then(res => {\r\n          resolve(res.data.data);\r\n        });\r\n      },\r\n      // 数据权限模块\r\n      handleDataScope(row) {\r\n        this.drawerVisible = true;\r\n        this.scopeMenuId = row.id;\r\n        this.scopeMenuName = row.name;\r\n        this.onLoadScope(this.pageScope)\r\n      },\r\n      handleDrawerClose(hide) {\r\n        hide();\r\n      },\r\n      rowSaveScope(row, done, loading) {\r\n        row = {\r\n          ...row,\r\n          menuId: this.scopeMenuId,\r\n        };\r\n        addApiScope(row).then(() => {\r\n          this.onLoadScope(this.pageScope);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdateScope(row, index, done, loading) {\r\n        row = {\r\n          ...row,\r\n          menuId: this.scopeMenuId,\r\n        };\r\n        updateApiScope(row).then(() => {\r\n          this.onLoadScope(this.pageScope);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDelScope(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeApiScope(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoadScope(this.pageScope);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDeleteScope() {\r\n        if (this.selectionListScope.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeApiScope(this.scopeIds);\r\n          })\r\n          .then(() => {\r\n            this.onLoadScope(this.pageScope);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crudScope.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpenScope(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getMenuApiScope(this.formScope.id).then(res => {\r\n            this.formScope = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchResetScope() {\r\n        this.onLoadScope(this.pageScope);\r\n      },\r\n      searchChangeScope(params, done) {\r\n        this.onLoadScope(this.pageScope, params);\r\n        done();\r\n      },\r\n      selectionChangeScope(list) {\r\n        this.selectionListScope = list;\r\n      },\r\n      currentChangeScope(currentPage) {\r\n        this.pageScope.currentPage = currentPage;\r\n      },\r\n      sizeChangeScope(pageSize) {\r\n        this.pageScope.pageSize = pageSize;\r\n      },\r\n      onLoadScope(page, params = {}) {\r\n        this.scopeLoading = true;\r\n        const values = {\r\n          ...params,\r\n          menuId: this.scopeMenuId,\r\n        }\r\n        getListApiScope(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.pageScope.total = data.total;\r\n          this.dataScope = data.records;\r\n          this.selectionListScope = [];\r\n          this.scopeLoading = false;\r\n        });\r\n      },\r\n    }\r\n  };\r\n</script>\r\n"]}]}