{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\flow\\follow.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\flow\\follow.vue","mtime":1592365966757},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.none-border {\n  border: 0;\n  background-color: transparent !important;\n}\n",{"version":3,"sources":["follow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsMA;AACA;AACA;AACA","file":"follow.vue","sourceRoot":"src/views/flow","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"suspensionState\">\r\n        <el-tag>{{row.suspensionState===1?'激活':'挂起'}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"流程删除\"\r\n               append-to-body\r\n               :visible.sync=\"followBox\"\r\n               width=\"20%\">\r\n      <el-form :model=\"form\"\r\n               ref=\"form\"\r\n               label-width=\"80px\">\r\n        <el-form-item label=\"删除理由\">\r\n          <el-input v-model=\"deleteReason\"\r\n                    placeholder=\"请输入删除理由\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\"\r\n            class=\"dialog-footer\">\r\n        <el-button @click=\"followBox = false\">关 闭</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click=\"handleDelete\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {mapGetters} from \"vuex\";\r\n  import {followList, deleteProcessInstance} from \"@/api/flow/flow\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        selectionId: '',\r\n        processInstanceId: '',\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        followBox: false,\r\n        deleteReason: '',\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          editBtn: false,\r\n          addBtn: false,\r\n          viewBtn: false,\r\n          dialogWidth: 900,\r\n          menuWidth: 100,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"执行id\",\r\n              prop: \"executionId\",\r\n              search: true,\r\n              width: 320,\r\n            },\r\n            {\r\n              label: \"流程key\",\r\n              prop: \"processDefinitionKey\",\r\n              search: true,\r\n            },\r\n            {\r\n              label: \"实例id\",\r\n              prop: \"processInstanceId\",\r\n              search: true,\r\n              width: 320,\r\n            },\r\n            {\r\n              label: \"状态\",\r\n              prop: \"suspensionState\",\r\n              slot: true,\r\n              width: 80,\r\n            },\r\n            {\r\n              label: \"发起人\",\r\n              prop: \"startUser\",\r\n              width: 100,\r\n            },\r\n            {\r\n              label: '开始时间',\r\n              prop: 'startTime',\r\n              width: 165,\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          delBtn: this.vaildData(this.permission.flow_follow_delete, false),\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowDel(row) {\r\n        this.followBox = true;\r\n        this.selectionId = row.id;\r\n        this.processInstanceId = row.processInstanceId;\r\n      },\r\n      handleDelete() {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return deleteProcessInstance({deleteReason: this.deleteReason, processInstanceId: this.processInstanceId});\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.followBox = false;\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        followList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .none-border {\r\n    border: 0;\r\n    background-color: transparent !important;\r\n  }\r\n</style>\r\n"]}]}