{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\system\\dept.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\system\\dept.vue","mtime":1592365966763},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getLazyList,\n  remove,\n  update,\n  add,\n  getDept,\n  getDeptTree\n} from \"@/api/system/dept\";\nimport {mapGetters} from \"vuex\";\nimport website from '@/config/website';\n\nexport default {\n  data() {\n    return {\n      form: {},\n      selectionList: [],\n      query: {},\n      loading: true,\n      parentId: 0,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0,\n      },\n      option: {\n        lazy: true,\n        tip: false,\n        simplePage: true,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tree: true,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        menuWidth: 300,\n        dialogClickModal: false,\n        column: [\n          {\n            label: \"机构名称\",\n            prop: \"deptName\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入机构名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"所属租户\",\n            prop: \"tenantId\",\n            type: \"tree\",\n            dicUrl: \"/api/blade-system/tenant/select\",\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: website.tenantMode,\n            span: 24,\n            props: {\n              label: \"tenantName\",\n              value: \"tenantId\"\n            },\n            hide: !website.tenantMode,\n            search: website.tenantMode,\n            rules: [{\n              required: true,\n              message: \"请输入所属租户\",\n              trigger: \"click\"\n            }]\n          },\n          {\n            label: \"机构全称\",\n            prop: \"fullName\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入机构全称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"上级机构\",\n            prop: \"parentId\",\n            dicData: [],\n            type: \"tree\",\n            hide: true,\n            props: {\n              label: \"title\"\n            },\n            rules: [{\n              required: false,\n              message: \"请选择上级机构\",\n              trigger: \"click\"\n            }]\n          },\n          {\n            label: \"机构类型\",\n            type: \"select\",\n            dicUrl: \"/api/blade-system/dict/dictionary?code=org_category\",\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            dataType: \"number\",\n            width: 120,\n            prop: \"deptCategory\",\n            slot: true,\n            rules: [{\n              required: true,\n              message: \"请输入机构类型\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"排序\",\n            prop: \"sort\",\n            type: \"number\",\n            align: \"right\",\n            width: 80,\n            rules: [{\n              required: true,\n              message: \"请输入排序\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"备注\",\n            prop: \"remark\",\n            rules: [{\n              required: false,\n              message: \"请输入备注\",\n              trigger: \"blur\"\n            }],\n            hide: true\n          }\n        ]\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"userInfo\", \"permission\"]),\n    permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.dept_add, false),\n        viewBtn: this.vaildData(this.permission.dept_view, false),\n        delBtn: this.vaildData(this.permission.dept_delete, false),\n        editBtn: this.vaildData(this.permission.dept_edit, false)\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    initData() {\n      getDeptTree().then(res => {\n        const column = this.findObject(this.option.column, \"parentId\");\n        column.dicData = res.data.data;\n      });\n    },\n    handleAdd(row) {\n      this.$refs.crud.value.parentId = row.id;\n      this.$refs.crud.option.column.filter(item => {\n        if (item.prop === \"parentId\") {\n          item.value = row.id;\n          item.addDisabled = true;\n        }\n      });\n      this.$refs.crud.rowAdd();\n    },\n    rowSave(row, done, loading) {\n      add(row).then((res) => {\n        // 获取新增数据的相关字段\n        const data = res.data.data;\n        row.id = data.id;\n        row.deptCategoryName = data.deptCategoryName;\n        row.tenantId = data.tenantId;\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        // 数据回调进行刷新\n        done(row);\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate(row, index, done, loading) {\n      update(row).then(() => {\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n        // 数据回调进行刷新\n        done(row);\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel(row, index, done) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          // 数据回调进行刷新\n          done(row);\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          // 刷新表格数据并重载\n          this.data = [];\n          this.parentId = 0;\n          this.$refs.crud.refreshTable();\n          this.$refs.crud.toggleSelection();\n          // 表格数据重载\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    searchReset() {\n      this.query = {};\n      this.parentId = 0;\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.parentId = '';\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    beforeOpen(done, type) {\n      if ([\"add\", \"edit\"].includes(type)) {\n        this.initData();\n      }\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDept(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    beforeClose(done) {\n      this.$refs.crud.tableForm = {};\n      this.$refs.crud.value.parentId = \"\";\n      this.$refs.crud.value.addDisabled = false;\n      this.$refs.crud.option.column.filter(item => {\n        if (item.prop === \"parentId\") {\n          item.value = \"\";\n          item.addDisabled = false;\n        }\n      });\n      done();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getLazyList(this.parentId, Object.assign(params, this.query)).then(res => {\n        this.data = res.data.data;\n        this.loading = false;\n        this.selectionClear();\n      });\n    },\n    treeLoad(tree, treeNode, resolve) {\n      const parentId = tree.id;\n      getLazyList(parentId).then(res => {\n        resolve(res.data.data);\n      });\n    }\n  }\n};\n",{"version":3,"sources":["dept.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dept.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               :before-close=\"beforeClose\"\r\n               @row-del=\"rowDel\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\"\r\n               @tree-load=\"treeLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   v-if=\"permission.dept_delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button\r\n          type=\"text\"\r\n          icon=\"el-icon-circle-plus-outline\"\r\n          size=\"small\"\r\n          @click.stop=\"handleAdd(scope.row,scope.index)\"\r\n          v-if=\"userInfo.role_name.includes('admin')\"\r\n        >新增子项\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"deptCategory\">\r\n        <el-tag>{{row.deptCategoryName}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getLazyList,\r\n    remove,\r\n    update,\r\n    add,\r\n    getDept,\r\n    getDeptTree\r\n  } from \"@/api/system/dept\";\r\n  import {mapGetters} from \"vuex\";\r\n  import website from '@/config/website';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        parentId: 0,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0,\r\n        },\r\n        option: {\r\n          lazy: true,\r\n          tip: false,\r\n          simplePage: true,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          tree: true,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          menuWidth: 300,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"机构名称\",\r\n              prop: \"deptName\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入机构名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantId\",\r\n              type: \"tree\",\r\n              dicUrl: \"/api/blade-system/tenant/select\",\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: website.tenantMode,\r\n              span: 24,\r\n              props: {\r\n                label: \"tenantName\",\r\n                value: \"tenantId\"\r\n              },\r\n              hide: !website.tenantMode,\r\n              search: website.tenantMode,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入所属租户\",\r\n                trigger: \"click\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"机构全称\",\r\n              prop: \"fullName\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入机构全称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"上级机构\",\r\n              prop: \"parentId\",\r\n              dicData: [],\r\n              type: \"tree\",\r\n              hide: true,\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              rules: [{\r\n                required: false,\r\n                message: \"请选择上级机构\",\r\n                trigger: \"click\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"机构类型\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=org_category\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              width: 120,\r\n              prop: \"deptCategory\",\r\n              slot: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入机构类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              align: \"right\",\r\n              width: 80,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入排序\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              rules: [{\r\n                required: false,\r\n                message: \"请输入备注\",\r\n                trigger: \"blur\"\r\n              }],\r\n              hide: true\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"userInfo\", \"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.dept_add, false),\r\n          viewBtn: this.vaildData(this.permission.dept_view, false),\r\n          delBtn: this.vaildData(this.permission.dept_delete, false),\r\n          editBtn: this.vaildData(this.permission.dept_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      initData() {\r\n        getDeptTree().then(res => {\r\n          const column = this.findObject(this.option.column, \"parentId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n      },\r\n      handleAdd(row) {\r\n        this.$refs.crud.value.parentId = row.id;\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"parentId\") {\r\n            item.value = row.id;\r\n            item.addDisabled = true;\r\n          }\r\n        });\r\n        this.$refs.crud.rowAdd();\r\n      },\r\n      rowSave(row, done, loading) {\r\n        add(row).then((res) => {\r\n          // 获取新增数据的相关字段\r\n          const data = res.data.data;\r\n          row.id = data.id;\r\n          row.deptCategoryName = data.deptCategoryName;\r\n          row.tenantId = data.tenantId;\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          // 数据回调进行刷新\r\n          done(row);\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          // 数据回调进行刷新\r\n          done(row);\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row, index, done) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            // 数据回调进行刷新\r\n            done(row);\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            // 刷新表格数据并重载\r\n            this.data = [];\r\n            this.parentId = 0;\r\n            this.$refs.crud.refreshTable();\r\n            this.$refs.crud.toggleSelection();\r\n            // 表格数据重载\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.parentId = 0;\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.parentId = '';\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"add\", \"edit\"].includes(type)) {\r\n          this.initData();\r\n        }\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDept(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      beforeClose(done) {\r\n        this.$refs.crud.tableForm = {};\r\n        this.$refs.crud.value.parentId = \"\";\r\n        this.$refs.crud.value.addDisabled = false;\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"parentId\") {\r\n            item.value = \"\";\r\n            item.addDisabled = false;\r\n          }\r\n        });\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getLazyList(this.parentId, Object.assign(params, this.query)).then(res => {\r\n          this.data = res.data.data;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      treeLoad(tree, treeNode, resolve) {\r\n        const parentId = tree.id;\r\n        getLazyList(parentId).then(res => {\r\n          resolve(res.data.data);\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}