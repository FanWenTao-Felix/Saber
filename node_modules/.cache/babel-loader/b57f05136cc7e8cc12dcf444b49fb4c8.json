{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\cache.js","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\cache.js","mtime":1592365966699},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.some\";\nimport Vue from 'vue';\nimport store from \"./store\";\nVue.mixin({\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    var _this = this;\n\n    if (this.$route.meta.keepAlive === true) {\n      var result = this.$route.meta.keepAlive === true && store.state.tags.tagList.some(function (ele) {\n        return ele.value === _this.$route.fullPath;\n      });\n\n      if (this.$vnode && !result) {\n        if (this.$vnode.parent && this.$vnode.parent.componentInstance && this.$vnode.parent.componentInstance.cache) {\n          if (this.$vnode.componentOptions) {\n            var key = this.$vnode.key == null ? this.$vnode.componentOptions.Ctor.cid + (this.$vnode.componentOptions.tag ? \"::\".concat(this.$vnode.componentOptions.tag) : '') : this.$vnode.key;\n            var cache = this.$vnode.parent.componentInstance.cache;\n            var keys = this.$vnode.parent.componentInstance.keys;\n\n            if (cache[key]) {\n              if (keys.length) {\n                var index = keys.indexOf(key);\n\n                if (index > -1) {\n                  keys.splice(index, 1);\n                }\n              }\n\n              delete cache[key];\n            }\n          }\n        }\n      }\n    }\n\n    next();\n  }\n});",{"version":3,"sources":["F:/A---Spring/bladeX/blade/Saber/src/cache.js"],"names":["Vue","store","mixin","beforeRouteLeave","to","from","next","$route","meta","keepAlive","result","state","tags","tagList","some","ele","value","fullPath","$vnode","parent","componentInstance","cache","componentOptions","key","Ctor","cid","tag","keys","length","index","indexOf","splice"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP;AACAD,GAAG,CAACE,KAAJ,CAAU;AACRC,EAAAA,gBAAgB,EAAE,0BAAUC,EAAV,EAAcC,IAAd,EAAoBC,IAApB,EAA0B;AAAA;;AAC1C,QAAI,KAAKC,MAAL,CAAYC,IAAZ,CAAiBC,SAAjB,KAA+B,IAAnC,EAAyC;AACvC,UAAMC,MAAM,GAAG,KAAKH,MAAL,CAAYC,IAAZ,CAAiBC,SAAjB,KAA+B,IAA/B,IAAuCR,KAAK,CAACU,KAAN,CAAYC,IAAZ,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8B,UAAAC,GAAG,EAAI;AACzF,eAAOA,GAAG,CAACC,KAAJ,KAAc,KAAI,CAACT,MAAL,CAAYU,QAAjC;AACD,OAFqD,CAAtD;;AAGA,UAAI,KAAKC,MAAL,IAAe,CAACR,MAApB,EAA4B;AAC1B,YAAI,KAAKQ,MAAL,CAAYC,MAAZ,IAAsB,KAAKD,MAAL,CAAYC,MAAZ,CAAmBC,iBAAzC,IAA8D,KAAKF,MAAL,CAAYC,MAAZ,CAAmBC,iBAAnB,CAAqCC,KAAvG,EAA8G;AAC5G,cAAI,KAAKH,MAAL,CAAYI,gBAAhB,EAAkC;AAChC,gBAAIC,GAAG,GAAG,KAAKL,MAAL,CAAYK,GAAZ,IAAmB,IAAnB,GACN,KAAKL,MAAL,CAAYI,gBAAZ,CAA6BE,IAA7B,CAAkCC,GAAlC,IAAyC,KAAKP,MAAL,CAAYI,gBAAZ,CAA6BI,GAA7B,eAAwC,KAAKR,MAAL,CAAYI,gBAAZ,CAA6BI,GAArE,IAA6E,EAAtH,CADM,GAEN,KAAKR,MAAL,CAAYK,GAFhB;AAGA,gBAAIF,KAAK,GAAG,KAAKH,MAAL,CAAYC,MAAZ,CAAmBC,iBAAnB,CAAqCC,KAAjD;AACA,gBAAIM,IAAI,GAAG,KAAKT,MAAL,CAAYC,MAAZ,CAAmBC,iBAAnB,CAAqCO,IAAhD;;AACA,gBAAIN,KAAK,CAACE,GAAD,CAAT,EAAgB;AACd,kBAAII,IAAI,CAACC,MAAT,EAAiB;AACf,oBAAIC,KAAK,GAAGF,IAAI,CAACG,OAAL,CAAaP,GAAb,CAAZ;;AACA,oBAAIM,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdF,kBAAAA,IAAI,CAACI,MAAL,CAAYF,KAAZ,EAAmB,CAAnB;AACD;AACF;;AACD,qBAAOR,KAAK,CAACE,GAAD,CAAZ;AACD;AACF;AACF;AACF;AACF;;AACDjB,IAAAA,IAAI;AACL;AA5BO,CAAV","sourcesContent":["import Vue from 'vue'\r\nimport store from './store';\r\nVue.mixin({\r\n  beforeRouteLeave: function (to, from, next) {\r\n    if (this.$route.meta.keepAlive === true) {\r\n      const result = this.$route.meta.keepAlive === true && store.state.tags.tagList.some(ele => {\r\n        return ele.value === this.$route.fullPath;\r\n      });\r\n      if (this.$vnode && !result) {\r\n        if (this.$vnode.parent && this.$vnode.parent.componentInstance && this.$vnode.parent.componentInstance.cache) {\r\n          if (this.$vnode.componentOptions) {\r\n            let key = this.$vnode.key == null\r\n              ? this.$vnode.componentOptions.Ctor.cid + (this.$vnode.componentOptions.tag ? `::${this.$vnode.componentOptions.tag}` : '')\r\n              : this.$vnode.key;\r\n            let cache = this.$vnode.parent.componentInstance.cache;\r\n            let keys = this.$vnode.parent.componentInstance.keys;\r\n            if (cache[key]) {\r\n              if (keys.length) {\r\n                let index = keys.indexOf(key);\r\n                if (index > -1) {\r\n                  keys.splice(index, 1);\r\n                }\r\n              }\r\n              delete cache[key];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    next();\r\n  },\r\n});\r\n"]}]}