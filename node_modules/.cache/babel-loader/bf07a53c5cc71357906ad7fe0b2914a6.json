{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\api\\system\\role.js","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\api\\system\\role.js","mtime":1592365966693},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"F:/A---Spring/bladeX/blade/Saber/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport request from '@/router/axios';\nexport var getList = function getList(current, size, params) {\n  return request({\n    url: '/api/blade-system/role/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var grantTree = function grantTree() {\n  return request({\n    url: '/api/blade-system/menu/grant-tree',\n    method: 'get'\n  });\n};\nexport var grant = function grant(roleIds, menuIds, dataScopeIds, apiScopeIds) {\n  return request({\n    url: '/api/blade-system/role/grant',\n    method: 'post',\n    data: {\n      roleIds: roleIds,\n      menuIds: menuIds,\n      dataScopeIds: dataScopeIds,\n      apiScopeIds: apiScopeIds\n    }\n  });\n};\nexport var remove = function remove(ids) {\n  return request({\n    url: '/api/blade-system/role/remove',\n    method: 'post',\n    params: {\n      ids: ids\n    }\n  });\n};\nexport var add = function add(row) {\n  return request({\n    url: '/api/blade-system/role/submit',\n    method: 'post',\n    data: row\n  });\n};\nexport var update = function update(row) {\n  return request({\n    url: '/api/blade-system/role/submit',\n    method: 'post',\n    data: row\n  });\n};\nexport var getRole = function getRole(roleIds) {\n  return request({\n    url: '/api/blade-system/menu/role-tree-keys',\n    method: 'get',\n    params: {\n      roleIds: roleIds\n    }\n  });\n};\nexport var getRoleTree = function getRoleTree(tenantId) {\n  return request({\n    url: '/api/blade-system/role/tree',\n    method: 'get',\n    params: {\n      tenantId: tenantId\n    }\n  });\n};",{"version":3,"sources":["F:/A---Spring/bladeX/blade/Saber/src/api/system/role.js"],"names":["request","getList","current","size","params","url","method","grantTree","grant","roleIds","menuIds","dataScopeIds","apiScopeIds","data","remove","ids","add","row","update","getRole","getRoleTree","tenantId"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAUC,IAAV,EAAgBC,MAAhB,EAA2B;AAChD,SAAOJ,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,6BADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,kCACDA,MADC;AAEJF,MAAAA,OAAO,EAAPA,OAFI;AAGJC,MAAAA,IAAI,EAAJA;AAHI;AAHO,GAAD,CAAd;AASD,CAVM;AAWP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,SAAOP,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,mCADQ;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAd;AAID,CALM;AAOP,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAUC,OAAV,EAAmBC,YAAnB,EAAiCC,WAAjC,EAAiD;AACpE,SAAOZ,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,8BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbO,IAAAA,IAAI,EAAE;AACJJ,MAAAA,OAAO,EAAPA,OADI;AAEJC,MAAAA,OAAO,EAAPA,OAFI;AAGJC,MAAAA,YAAY,EAAZA,YAHI;AAIJC,MAAAA,WAAW,EAAXA;AAJI;AAHO,GAAD,CAAd;AAUD,CAXM;AAaP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAS;AAC7B,SAAOf,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,MAAM,EAAE;AACNW,MAAAA,GAAG,EAAHA;AADM;AAHK,GAAD,CAAd;AAOD,CARM;AAUP,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAS;AAC1B,SAAOjB,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbO,IAAAA,IAAI,EAAEI;AAHO,GAAD,CAAd;AAKD,CANM;AAQP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACD,GAAD,EAAS;AAC7B,SAAOjB,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,+BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbO,IAAAA,IAAI,EAAEI;AAHO,GAAD,CAAd;AAKD,CANM;AASP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACV,OAAD,EAAa;AAClC,SAAOT,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,uCADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAAE;AACNK,MAAAA,OAAO,EAAPA;AADM;AAHK,GAAD,CAAd;AAOD,CARM;AAUP,OAAO,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AACvC,SAAOrB,OAAO,CAAC;AACbK,IAAAA,GAAG,EAAE,6BADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbF,IAAAA,MAAM,EAAE;AACNiB,MAAAA,QAAQ,EAARA;AADM;AAHK,GAAD,CAAd;AAOD,CARM","sourcesContent":["import request from '@/router/axios';\r\n\r\nexport const getList = (current, size, params) => {\r\n  return request({\r\n    url: '/api/blade-system/role/list',\r\n    method: 'get',\r\n    params: {\r\n      ...params,\r\n      current,\r\n      size,\r\n    }\r\n  })\r\n}\r\nexport const grantTree = () => {\r\n  return request({\r\n    url: '/api/blade-system/menu/grant-tree',\r\n    method: 'get',\r\n  })\r\n}\r\n\r\nexport const grant = (roleIds, menuIds, dataScopeIds, apiScopeIds) => {\r\n  return request({\r\n    url: '/api/blade-system/role/grant',\r\n    method: 'post',\r\n    data: {\r\n      roleIds,\r\n      menuIds,\r\n      dataScopeIds,\r\n      apiScopeIds\r\n    }\r\n  })\r\n}\r\n\r\nexport const remove = (ids) => {\r\n  return request({\r\n    url: '/api/blade-system/role/remove',\r\n    method: 'post',\r\n    params: {\r\n      ids,\r\n    }\r\n  })\r\n}\r\n\r\nexport const add = (row) => {\r\n  return request({\r\n    url: '/api/blade-system/role/submit',\r\n    method: 'post',\r\n    data: row\r\n  })\r\n}\r\n\r\nexport const update = (row) => {\r\n  return request({\r\n    url: '/api/blade-system/role/submit',\r\n    method: 'post',\r\n    data: row\r\n  })\r\n}\r\n\r\n\r\nexport const getRole = (roleIds) => {\r\n  return request({\r\n    url: '/api/blade-system/menu/role-tree-keys',\r\n    method: 'get',\r\n    params: {\r\n      roleIds,\r\n    }\r\n  })\r\n}\r\n\r\nexport const getRoleTree = (tenantId) => {\r\n  return request({\r\n    url: '/api/blade-system/role/tree',\r\n    method: 'get',\r\n    params: {\r\n      tenantId,\r\n    }\r\n  })\r\n}\r\n"]}]}