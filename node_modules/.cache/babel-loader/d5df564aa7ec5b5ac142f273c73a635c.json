{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\router\\router.js","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\router\\router.js","mtime":1592365966732},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"F:/A---Spring/bladeX/blade/Saber/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\r\n * 全站路由配置\r\n *\r\n * meta参数说明\r\n * keepAlive是否缓冲页面\r\n * isTab是否加入到tag导航\r\n * isAuth是否需要授权\r\n */\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport PageRouter from \"./page/\"; // 页面路由\n\nimport ViewsRouter from \"./views/\"; // 页面路由\n\nimport AvueRouter from \"./avue-router\"; //封装的路由控制方法\n\nimport i18n from '@/lang'; // Internationalization 国际化 多语言\n\nimport Store from \"../store/\"; // vuex\n\nVue.use(VueRouter); //创建路由\n\nexport var createRouter = function createRouter() {\n  return new VueRouter({\n    // https://router.vuejs.org/zh/guide/advanced/scroll-behavior.html#%E5%BC%82%E6%AD%A5%E6%BB%9A%E5%8A%A8\n    // 这个方法 是控制滚动条\n    // 如果 retuen falsy || {} ,则不发生滚动\n    scrollBehavior: function scrollBehavior(to, from, savedPosition) {\n      // savedPosition 这个参数当且仅当导航 (通过浏览器的 前进/后退 按钮触发) 时才可用  效果和 router.go() 或 router.back()\n      if (savedPosition) {\n        // 返回savedPosition 其实就是 当用户点击 返回的话，保持之前游览的高度\n        return savedPosition;\n      } else {\n        if (from.meta.keepAlive) {\n          from.meta.savedPosition = document.body.scrollTop;\n        }\n\n        return {\n          x: 0,\n          y: to.meta.savedPosition || 0\n        };\n      }\n    },\n    routes: [].concat(_toConsumableArray(PageRouter), _toConsumableArray(ViewsRouter))\n  });\n};\nvar Router = createRouter(); // 获得 route 实例\n\nAvueRouter.install(Vue, Router, Store, i18n); // 初始化和注册 AvueRouter\n\nRouter.$avueRouter.formatRoutes(Store.state.user.menuAll, true); // 动态路由核心方法\n\nRouter.addRoutes([].concat(_toConsumableArray(PageRouter), _toConsumableArray(ViewsRouter)));\nexport function resetRouter() {\n  // 重置路由 比如用于身份验证失败，需要重新登录时 先清空当前的路有权限\n  var newRouter = createRouter();\n  Router.matcher = newRouter.matcher; // reset router\n\n  AvueRouter.install(Vue, Router, Store, i18n);\n}\nexport default Router;",{"version":3,"sources":["F:/A---Spring/bladeX/blade/Saber/src/router/router.js"],"names":["Vue","VueRouter","PageRouter","ViewsRouter","AvueRouter","i18n","Store","use","createRouter","scrollBehavior","to","from","savedPosition","meta","keepAlive","document","body","scrollTop","x","y","routes","Router","install","$avueRouter","formatRoutes","state","user","menuAll","addRoutes","resetRouter","newRouter","matcher"],"mappings":";;AAAA;;;;;;;;AAQA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,gB,CAAiC;;AACjC,OAAOC,WAAP,iB,CAAmC;;AACnC,OAAOC,UAAP,sB,CAAwC;;AACxC,OAAOC,IAAP,MAAiB,QAAjB,C,CAA0B;;AAC1B,OAAOC,KAAP,kB,CAA+B;;AAC/BN,GAAG,CAACO,GAAJ,CAAQN,SAAR,E,CACA;;AACA,OAAO,IAAMO,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,IAAIP,SAAJ,CAAc;AAC9C;AACA;AACA;AACAQ,IAAAA,cAJ8C,0BAI9BC,EAJ8B,EAI1BC,IAJ0B,EAIpBC,aAJoB,EAIL;AACvC;AACA,UAAIA,aAAJ,EAAmB;AACjB;AACA,eAAOA,aAAP;AACD,OAHD,MAGO;AACL,YAAID,IAAI,CAACE,IAAL,CAAUC,SAAd,EAAyB;AACvBH,UAAAA,IAAI,CAACE,IAAL,CAAUD,aAAV,GAA0BG,QAAQ,CAACC,IAAT,CAAcC,SAAxC;AACD;;AACD,eAAO;AACLC,UAAAA,CAAC,EAAE,CADE;AAELC,UAAAA,CAAC,EAAET,EAAE,CAACG,IAAH,CAAQD,aAAR,IAAyB;AAFvB,SAAP;AAID;AACF,KAlB6C;AAmB9CQ,IAAAA,MAAM,+BAAMlB,UAAN,sBAAqBC,WAArB;AAnBwC,GAAd,CAAN;AAAA,CAArB;AAqBP,IAAMkB,MAAM,GAAGb,YAAY,EAA3B,C,CAA8B;;AAC9BJ,UAAU,CAACkB,OAAX,CAAmBtB,GAAnB,EAAwBqB,MAAxB,EAAgCf,KAAhC,EAAuCD,IAAvC,E,CAA+C;;AAC/CgB,MAAM,CAACE,WAAP,CAAmBC,YAAnB,CAAgClB,KAAK,CAACmB,KAAN,CAAYC,IAAZ,CAAiBC,OAAjD,EAA0D,IAA1D,E,CAAiE;;AACjEN,MAAM,CAACO,SAAP,8BAAqB1B,UAArB,sBAAoCC,WAApC;AACA,OAAO,SAAS0B,WAAT,GAAwB;AAAG;AAChC,MAAMC,SAAS,GAAGtB,YAAY,EAA9B;AACAa,EAAAA,MAAM,CAACU,OAAP,GAAiBD,SAAS,CAACC,OAA3B,CAF6B,CAEM;;AACnC3B,EAAAA,UAAU,CAACkB,OAAX,CAAmBtB,GAAnB,EAAwBqB,MAAxB,EAAgCf,KAAhC,EAAuCD,IAAvC;AACD;AACD,eAAegB,MAAf","sourcesContent":["/**\r\n * 全站路由配置\r\n *\r\n * meta参数说明\r\n * keepAlive是否缓冲页面\r\n * isTab是否加入到tag导航\r\n * isAuth是否需要授权\r\n */\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport PageRouter from './page/' // 页面路由\r\nimport ViewsRouter from './views/' // 页面路由\r\nimport AvueRouter from './avue-router'; //封装的路由控制方法\r\nimport i18n from '@/lang' // Internationalization 国际化 多语言\r\nimport Store from '../store/'; // vuex\r\nVue.use(VueRouter)\r\n//创建路由\r\nexport const createRouter = () => new VueRouter({\r\n  // https://router.vuejs.org/zh/guide/advanced/scroll-behavior.html#%E5%BC%82%E6%AD%A5%E6%BB%9A%E5%8A%A8\r\n  // 这个方法 是控制滚动条\r\n  // 如果 retuen falsy || {} ,则不发生滚动\r\n  scrollBehavior (to, from, savedPosition) {\r\n    // savedPosition 这个参数当且仅当导航 (通过浏览器的 前进/后退 按钮触发) 时才可用  效果和 router.go() 或 router.back()\r\n    if (savedPosition) {\r\n      // 返回savedPosition 其实就是 当用户点击 返回的话，保持之前游览的高度\r\n      return savedPosition\r\n    } else {\r\n      if (from.meta.keepAlive) {\r\n        from.meta.savedPosition = document.body.scrollTop\r\n      }\r\n      return {\r\n        x: 0,\r\n        y: to.meta.savedPosition || 0\r\n      }\r\n    }\r\n  },\r\n  routes: [...PageRouter, ...ViewsRouter]\r\n})\r\nconst Router = createRouter() // 获得 route 实例\r\nAvueRouter.install(Vue, Router, Store, i18n);  // 初始化和注册 AvueRouter\r\nRouter.$avueRouter.formatRoutes(Store.state.user.menuAll, true); // 动态路由核心方法\r\nRouter.addRoutes([...PageRouter, ...ViewsRouter]);\r\nexport function resetRouter () {  // 重置路由 比如用于身份验证失败，需要重新登录时 先清空当前的路有权限\r\n  const newRouter = createRouter()\r\n  Router.matcher = newRouter.matcher // reset router\r\n  AvueRouter.install(Vue, Router, Store, i18n);\r\n}\r\nexport default Router\r\n"]}]}