{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\system\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\system\\user.vue","mtime":1592365966767},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"F:/A---Spring/bladeX/blade/Saber/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.map\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, getUser, remove, update, add, grant, resetPassword } from \"@/api/system/user\";\nimport { getDeptTree, getDeptLazyTree } from \"@/api/system/dept\";\nimport { getRoleTree } from \"@/api/system/role\";\nimport { getPostList } from \"@/api/system/post\";\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nimport { getToken } from '@/util/auth';\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      form: {},\n      roleBox: false,\n      excelBox: false,\n      initFlag: true,\n      selectionList: [],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      init: {\n        roleTree: [],\n        deptTree: []\n      },\n      props: {\n        label: \"title\",\n        value: \"key\"\n      },\n      roleGrantList: [],\n      roleTreeObj: [],\n      treeDeptId: '',\n      treeData: [],\n      treeOption: {\n        nodeKey: 'id',\n        lazy: true,\n        treeLoad: function treeLoad(node, resolve) {\n          var parentId = node.level === 0 ? 0 : node.data.id;\n          getDeptLazyTree(parentId).then(function (res) {\n            resolve(res.data.data.map(function (item) {\n              return _objectSpread(_objectSpread({}, item), {}, {\n                leaf: !item.hasChildren\n              });\n            }));\n          });\n        },\n        addBtn: false,\n        menu: false,\n        size: 'small',\n        props: {\n          labelText: '标题',\n          label: 'title',\n          value: 'value',\n          children: 'children'\n        }\n      },\n      option: {\n        height: 'auto',\n        calcHeight: 180,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        //dialogType: 'drawer',\n        dialogClickModal: false,\n        column: [{\n          label: \"登录账号\",\n          prop: \"account\",\n          search: true,\n          display: false\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantName\",\n          slot: true,\n          display: false\n        }, {\n          label: \"用户姓名\",\n          prop: \"realName\",\n          search: true,\n          display: false\n        }, {\n          label: \"所属角色\",\n          prop: \"roleName\",\n          slot: true,\n          display: false\n        }, {\n          label: \"所属部门\",\n          prop: \"deptName\",\n          slot: true,\n          display: false\n        }],\n        group: [{\n          label: '基础信息',\n          prop: 'baseInfo',\n          icon: 'el-icon-user-solid',\n          column: [{\n            label: \"登录账号\",\n            prop: \"account\",\n            rules: [{\n              required: true,\n              message: \"请输入登录账号\",\n              trigger: \"blur\"\n            }],\n            span: website.tenantMode ? 12 : 24\n          }, {\n            label: \"所属租户\",\n            prop: \"tenantId\",\n            type: \"tree\",\n            dicUrl: \"/api/blade-system/tenant/select\",\n            props: {\n              label: \"tenantName\",\n              value: \"tenantId\"\n            },\n            hide: !website.tenantMode,\n            addDisplay: website.tenantMode,\n            editDisplay: website.tenantMode,\n            viewDisplay: website.tenantMode,\n            rules: [{\n              required: true,\n              message: \"请输入所属租户\",\n              trigger: \"click\"\n            }]\n          }, {\n            label: '密码',\n            prop: 'password',\n            hide: true,\n            editDisplay: false,\n            viewDisplay: false,\n            rules: [{\n              required: true,\n              validator: validatePass,\n              trigger: 'blur'\n            }]\n          }, {\n            label: '确认密码',\n            prop: 'password2',\n            hide: true,\n            editDisplay: false,\n            viewDisplay: false,\n            rules: [{\n              required: true,\n              validator: validatePass2,\n              trigger: 'blur'\n            }]\n          }]\n        }, {\n          label: '详细信息',\n          prop: 'detailInfo',\n          icon: 'el-icon-s-order',\n          column: [{\n            label: \"用户昵称\",\n            prop: \"name\",\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入用户昵称\",\n              trigger: \"blur\"\n            }]\n          }, {\n            label: \"用户姓名\",\n            prop: \"realName\",\n            rules: [{\n              required: true,\n              message: \"请输入用户姓名\",\n              trigger: \"blur\"\n            }, {\n              min: 2,\n              max: 5,\n              message: '姓名长度在2到5个字符'\n            }]\n          }, {\n            label: \"手机号码\",\n            prop: \"phone\",\n            overHidden: true\n          }, {\n            label: \"电子邮箱\",\n            prop: \"email\",\n            hide: true,\n            overHidden: true\n          }, {\n            label: \"用户性别\",\n            prop: \"sex\",\n            type: \"select\",\n            dicData: [{\n              label: \"男\",\n              value: 1\n            }, {\n              label: \"女\",\n              value: 2\n            }, {\n              label: \"未知\",\n              value: 3\n            }],\n            hide: true\n          }, {\n            label: \"用户生日\",\n            type: \"date\",\n            prop: \"birthday\",\n            format: \"yyyy-MM-dd hh:mm:ss\",\n            valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n            hide: true\n          }, {\n            label: \"账号状态\",\n            prop: \"statusName\",\n            hide: true,\n            display: false\n          }]\n        }, {\n          label: '职责信息',\n          prop: 'dutyInfo',\n          icon: 'el-icon-s-custom',\n          column: [{\n            label: \"用户编号\",\n            prop: \"code\"\n          }, {\n            label: \"所属角色\",\n            prop: \"roleId\",\n            multiple: true,\n            type: \"tree\",\n            dicData: [],\n            props: {\n              label: \"title\"\n            },\n            checkStrictly: true,\n            slot: true,\n            rules: [{\n              required: true,\n              message: \"请选择所属角色\",\n              trigger: \"click\"\n            }]\n          }, {\n            label: \"所属部门\",\n            prop: \"deptId\",\n            type: \"tree\",\n            multiple: true,\n            dicData: [],\n            props: {\n              label: \"title\"\n            },\n            checkStrictly: true,\n            slot: true,\n            rules: [{\n              required: true,\n              message: \"请选择所属部门\",\n              trigger: \"click\"\n            }]\n          }, {\n            label: \"所属岗位\",\n            prop: \"postId\",\n            type: \"tree\",\n            multiple: true,\n            dicData: [],\n            props: {\n              label: \"postName\",\n              value: \"id\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择所属岗位\",\n              trigger: \"click\"\n            }]\n          }]\n        }]\n      },\n      data: [],\n      excelForm: {},\n      excelOption: {\n        submitBtn: false,\n        emptyBtn: false,\n        column: [{\n          label: '模板上传',\n          prop: 'excelFile',\n          type: 'upload',\n          drag: true,\n          loadText: '模板上传中，请稍等',\n          span: 24,\n          propsHttp: {\n            res: 'data'\n          },\n          tip: '请上传 .xls,.xlsx 标准格式文件',\n          action: \"/api/blade-user/import-user\"\n        }, {\n          label: \"数据覆盖\",\n          prop: \"isCovered\",\n          type: \"switch\",\n          align: \"center\",\n          width: 80,\n          dicData: [{\n            label: \"否\",\n            value: 0\n          }, {\n            label: \"是\",\n            value: 1\n          }],\n          value: 0,\n          slot: true,\n          rules: [{\n            required: true,\n            message: \"请选择是否覆盖\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: '模板下载',\n          prop: 'excelTemplate',\n          formslot: true,\n          span: 24\n        }]\n      }\n    };\n  },\n  watch: {\n    'form.tenantId': function formTenantId() {\n      if (this.form.tenantId !== '' && this.initFlag) {\n        this.initData(this.form.tenantId);\n      }\n    },\n    'excelForm.isCovered': function excelFormIsCovered() {\n      if (this.excelForm.isCovered !== '') {\n        var column = this.findObject(this.excelOption.column, \"excelFile\");\n        column.action = \"/api/blade-user/import-user?isCovered=\".concat(this.excelForm.isCovered);\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.user_add, false),\n        viewBtn: this.vaildData(this.permission.user_view, false),\n        delBtn: this.vaildData(this.permission.user_delete, false),\n        editBtn: this.vaildData(this.permission.user_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  mounted: function mounted() {\n    // 非租户模式默认加载管理组数据\n    if (!website.tenantMode) {\n      this.initData(website.tenantId);\n    }\n  },\n  methods: {\n    nodeClick: function nodeClick(data) {\n      this.treeDeptId = data.id;\n      this.page.currentPage = 1;\n      this.onLoad(this.page);\n    },\n    initData: function initData(tenantId) {\n      var _this2 = this;\n\n      getRoleTree(tenantId).then(function (res) {\n        var column = _this2.findObject(_this2.option.group, \"roleId\");\n\n        column.dicData = res.data.data;\n      });\n      getDeptTree(tenantId).then(function (res) {\n        var column = _this2.findObject(_this2.option.group, \"deptId\");\n\n        column.dicData = res.data.data;\n      });\n      getPostList(tenantId).then(function (res) {\n        var column = _this2.findObject(_this2.option.group, \"postId\");\n\n        column.dicData = res.data.data;\n      });\n    },\n    submitRole: function submitRole() {\n      var _this3 = this;\n\n      var roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\n      grant(this.ids, roleList).then(function () {\n        _this3.roleBox = false;\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this3.onLoad(_this3.page);\n      });\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this4 = this;\n\n      row.deptId = row.deptId.join(\",\");\n      row.roleId = row.roleId.join(\",\");\n      row.postId = row.postId.join(\",\");\n      add(row).then(function () {\n        _this4.initFlag = false;\n\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this5 = this;\n\n      row.deptId = row.deptId.join(\",\");\n      row.roleId = row.roleId.join(\",\");\n      row.postId = row.postId.join(\",\");\n      update(row).then(function () {\n        _this5.initFlag = false;\n\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this6 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.treeDeptId = '';\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this7 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this7.ids);\n      }).then(function () {\n        _this7.onLoad(_this7.page);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this7.$refs.crud.toggleSelection();\n      });\n    },\n    handleReset: function handleReset() {\n      var _this8 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择账号密码重置为123456?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return resetPassword(_this8.ids);\n      }).then(function () {\n        _this8.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this8.$refs.crud.toggleSelection();\n      });\n    },\n    handleGrant: function handleGrant() {\n      var _this9 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.roleTreeObj = [];\n\n      if (this.selectionList.length === 1) {\n        this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\n      }\n\n      getRoleTree().then(function (res) {\n        _this9.roleGrantList = res.data.data;\n        _this9.roleBox = true;\n      });\n    },\n    handleImport: function handleImport() {\n      this.excelBox = true;\n    },\n    uploadAfter: function uploadAfter(res, done, loading, column) {\n      window.console.log(column);\n      this.excelBox = false;\n      this.refreshChange();\n      done();\n    },\n    handleExport: function handleExport() {\n      var _this10 = this;\n\n      this.$confirm(\"是否导出用户数据?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        var searchForm = _this10.$refs.crud.searchForm;\n        window.open(\"/api/blade-user/export-user?\".concat(_this10.website.tokenHeader, \"=\").concat(getToken(), \"&account=\").concat(searchForm.account, \"&realName=\").concat(searchForm.realName));\n      });\n    },\n    handleTemplate: function handleTemplate() {\n      window.open(\"/api/blade-user/export-template?\".concat(this.website.tokenHeader, \"=\").concat(getToken()));\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this11 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getUser(this.form.id).then(function (res) {\n          _this11.form = res.data.data;\n\n          if (_this11.form.hasOwnProperty(\"deptId\")) {\n            _this11.form.deptId = _this11.form.deptId.split(\",\");\n          }\n\n          if (_this11.form.hasOwnProperty(\"roleId\")) {\n            _this11.form.roleId = _this11.form.roleId.split(\",\");\n          }\n\n          if (_this11.form.hasOwnProperty(\"postId\")) {\n            _this11.form.postId = _this11.form.postId.split(\",\");\n          }\n        });\n      }\n\n      this.initFlag = true;\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this12 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query), this.treeDeptId).then(function (res) {\n        var data = res.data.data;\n        _this12.page.total = data.total;\n        _this12.data = data.records;\n        _this12.loading = false;\n\n        _this12.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"sources":["user.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-row>\r\n    <el-col :span=\"5\">\r\n      <div class=\"box\">\r\n        <el-scrollbar>\r\n          <basic-container>\r\n            <avue-tree :option=\"treeOption\" :data=\"treeData\" @node-click=\"nodeClick\"/>\r\n          </basic-container>\r\n        </el-scrollbar>\r\n      </div>\r\n    </el-col>\r\n    <el-col :span=\"19\">\r\n      <basic-container>\r\n        <avue-crud :option=\"option\"\r\n                   :table-loading=\"loading\"\r\n                   :data=\"data\"\r\n                   ref=\"crud\"\r\n                   v-model=\"form\"\r\n                   :permission=\"permissionList\"\r\n                   @row-del=\"rowDel\"\r\n                   @row-update=\"rowUpdate\"\r\n                   @row-save=\"rowSave\"\r\n                   :before-open=\"beforeOpen\"\r\n                   :page=\"page\"\r\n                   @search-change=\"searchChange\"\r\n                   @search-reset=\"searchReset\"\r\n                   @selection-change=\"selectionChange\"\r\n                   @current-change=\"currentChange\"\r\n                   @size-change=\"sizeChange\"\r\n                   @refresh-change=\"refreshChange\"\r\n                   @on-load=\"onLoad\">\r\n          <template slot=\"menuLeft\">\r\n            <el-button type=\"danger\"\r\n                       size=\"small\"\r\n                       plain\r\n                       icon=\"el-icon-delete\"\r\n                       v-if=\"permission.user_delete\"\r\n                       @click=\"handleDelete\">删 除\r\n            </el-button>\r\n            <el-button type=\"info\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"permission.user_role\"\r\n                       icon=\"el-icon-user\"\r\n                       @click=\"handleGrant\">角色配置\r\n            </el-button>\r\n            <el-button size=\"small\"\r\n                       plain\r\n                       v-if=\"permission.user_reset\"\r\n                       icon=\"el-icon-refresh\"\r\n                       @click=\"handleReset\">密码重置\r\n            </el-button>\r\n            <el-button type=\"success\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"userInfo.role_name.includes('admin')\"\r\n                       icon=\"el-icon-upload2\"\r\n                       @click=\"handleImport\">导入\r\n            </el-button>\r\n            <el-button type=\"warning\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"userInfo.role_name.includes('admin')\"\r\n                       icon=\"el-icon-download\"\r\n                       @click=\"handleExport\">导出\r\n            </el-button>\r\n          </template>\r\n          <template slot-scope=\"{row}\"\r\n                    slot=\"tenantName\">\r\n            <el-tag>{{row.tenantName}}</el-tag>\r\n          </template>\r\n          <template slot-scope=\"{row}\"\r\n                    slot=\"roleName\">\r\n            <el-tag>{{row.roleName}}</el-tag>\r\n          </template>\r\n          <template slot-scope=\"{row}\"\r\n                    slot=\"deptName\">\r\n            <el-tag>{{row.deptName}}</el-tag>\r\n          </template>\r\n        </avue-crud>\r\n        <el-dialog title=\"用户角色配置\"\r\n                   append-to-body\r\n                   :visible.sync=\"roleBox\"\r\n                   width=\"345px\">\r\n\r\n          <el-tree :data=\"roleGrantList\"\r\n                   show-checkbox\r\n                   check-strictly\r\n                   default-expand-all\r\n                   node-key=\"id\"\r\n                   ref=\"treeRole\"\r\n                   :default-checked-keys=\"roleTreeObj\"\r\n                   :props=\"props\">\r\n          </el-tree>\r\n\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"roleBox = false\">取 消</el-button>\r\n            <el-button type=\"primary\"\r\n                       @click=\"submitRole\">确 定</el-button>\r\n          </span>\r\n        </el-dialog>\r\n        <el-dialog title=\"用户数据导入\"\r\n                   append-to-body\r\n                   :visible.sync=\"excelBox\"\r\n                   width=\"555px\">\r\n          <avue-form :option=\"excelOption\" v-model=\"excelForm\" :upload-after=\"uploadAfter\">\r\n            <template slot=\"excelTemplate\">\r\n              <el-button type=\"primary\" @click=\"handleTemplate\">\r\n                点击下载<i class=\"el-icon-download el-icon--right\"></i>\r\n              </el-button>\r\n            </template>\r\n          </avue-form>\r\n        </el-dialog>\r\n      </basic-container>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getList,\r\n    getUser,\r\n    remove,\r\n    update,\r\n    add,\r\n    grant,\r\n    resetPassword\r\n  } from \"@/api/system/user\";\r\n  import {getDeptTree, getDeptLazyTree} from \"@/api/system/dept\";\r\n  import {getRoleTree} from \"@/api/system/role\";\r\n  import {getPostList} from \"@/api/system/post\";\r\n  import {mapGetters} from \"vuex\";\r\n  import website from '@/config/website';\r\n  import {getToken} from '@/util/auth';\r\n\r\n  export default {\r\n    data() {\r\n      const validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      const validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.form.password) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        form: {},\r\n        roleBox: false,\r\n        excelBox: false,\r\n        initFlag: true,\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        init: {\r\n          roleTree: [],\r\n          deptTree: [],\r\n        },\r\n        props: {\r\n          label: \"title\",\r\n          value: \"key\"\r\n        },\r\n        roleGrantList: [],\r\n        roleTreeObj: [],\r\n        treeDeptId: '',\r\n        treeData: [],\r\n        treeOption: {\r\n          nodeKey: 'id',\r\n          lazy: true,\r\n          treeLoad: function (node, resolve) {\r\n            const parentId = (node.level === 0) ? 0 : node.data.id;\r\n            getDeptLazyTree(parentId).then(res => {\r\n              resolve(res.data.data.map(item => {\r\n                return {\r\n                  ...item,\r\n                  leaf: !item.hasChildren\r\n                }\r\n              }))\r\n            });\r\n          },\r\n          addBtn: false,\r\n          menu: false,\r\n          size: 'small',\r\n          props: {\r\n            labelText: '标题',\r\n            label: 'title',\r\n            value: 'value',\r\n            children: 'children'\r\n          }\r\n        },\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 180,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          //dialogType: 'drawer',\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"登录账号\",\r\n              prop: \"account\",\r\n              search: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantName\",\r\n              slot: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"用户姓名\",\r\n              prop: \"realName\",\r\n              search: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"所属角色\",\r\n              prop: \"roleName\",\r\n              slot: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: \"所属部门\",\r\n              prop: \"deptName\",\r\n              slot: true,\r\n              display: false\r\n            },\r\n          ],\r\n          group: [\r\n            {\r\n              label: '基础信息',\r\n              prop: 'baseInfo',\r\n              icon: 'el-icon-user-solid',\r\n              column: [\r\n                {\r\n                  label: \"登录账号\",\r\n                  prop: \"account\",\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入登录账号\",\r\n                    trigger: \"blur\"\r\n                  }],\r\n                  span: website.tenantMode ? 12 : 24,\r\n                },\r\n                {\r\n                  label: \"所属租户\",\r\n                  prop: \"tenantId\",\r\n                  type: \"tree\",\r\n                  dicUrl: \"/api/blade-system/tenant/select\",\r\n                  props: {\r\n                    label: \"tenantName\",\r\n                    value: \"tenantId\"\r\n                  },\r\n                  hide: !website.tenantMode,\r\n                  addDisplay: website.tenantMode,\r\n                  editDisplay: website.tenantMode,\r\n                  viewDisplay: website.tenantMode,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入所属租户\",\r\n                    trigger: \"click\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: '密码',\r\n                  prop: 'password',\r\n                  hide: true,\r\n                  editDisplay: false,\r\n                  viewDisplay: false,\r\n                  rules: [{required: true, validator: validatePass, trigger: 'blur'}]\r\n                },\r\n                {\r\n                  label: '确认密码',\r\n                  prop: 'password2',\r\n                  hide: true,\r\n                  editDisplay: false,\r\n                  viewDisplay: false,\r\n                  rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\r\n                },\r\n              ]\r\n            },\r\n            {\r\n              label: '详细信息',\r\n              prop: 'detailInfo',\r\n              icon: 'el-icon-s-order',\r\n              column: [\r\n                {\r\n                  label: \"用户昵称\",\r\n                  prop: \"name\",\r\n                  hide: true,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入用户昵称\",\r\n                    trigger: \"blur\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"用户姓名\",\r\n                  prop: \"realName\",\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入用户姓名\",\r\n                    trigger: \"blur\"\r\n                  }, {\r\n                    min: 2,\r\n                    max: 5,\r\n                    message: '姓名长度在2到5个字符'\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"手机号码\",\r\n                  prop: \"phone\",\r\n                  overHidden: true\r\n                },\r\n                {\r\n                  label: \"电子邮箱\",\r\n                  prop: \"email\",\r\n                  hide: true,\r\n                  overHidden: true\r\n                },\r\n                {\r\n                  label: \"用户性别\",\r\n                  prop: \"sex\",\r\n                  type: \"select\",\r\n                  dicData: [\r\n                    {\r\n                      label: \"男\",\r\n                      value: 1\r\n                    },\r\n                    {\r\n                      label: \"女\",\r\n                      value: 2\r\n                    },\r\n                    {\r\n                      label: \"未知\",\r\n                      value: 3\r\n                    }\r\n                  ],\r\n                  hide: true\r\n                },\r\n                {\r\n                  label: \"用户生日\",\r\n                  type: \"date\",\r\n                  prop: \"birthday\",\r\n                  format: \"yyyy-MM-dd hh:mm:ss\",\r\n                  valueFormat: \"yyyy-MM-dd hh:mm:ss\",\r\n                  hide: true\r\n                },\r\n                {\r\n                  label: \"账号状态\",\r\n                  prop: \"statusName\",\r\n                  hide: true,\r\n                  display: false\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: '职责信息',\r\n              prop: 'dutyInfo',\r\n              icon: 'el-icon-s-custom',\r\n              column: [\r\n                {\r\n                  label: \"用户编号\",\r\n                  prop: \"code\",\r\n                },\r\n                {\r\n                  label: \"所属角色\",\r\n                  prop: \"roleId\",\r\n                  multiple: true,\r\n                  type: \"tree\",\r\n                  dicData: [],\r\n                  props: {\r\n                    label: \"title\"\r\n                  },\r\n                  checkStrictly: true,\r\n                  slot: true,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请选择所属角色\",\r\n                    trigger: \"click\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"所属部门\",\r\n                  prop: \"deptId\",\r\n                  type: \"tree\",\r\n                  multiple: true,\r\n                  dicData: [],\r\n                  props: {\r\n                    label: \"title\"\r\n                  },\r\n                  checkStrictly: true,\r\n                  slot: true,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请选择所属部门\",\r\n                    trigger: \"click\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"所属岗位\",\r\n                  prop: \"postId\",\r\n                  type: \"tree\",\r\n                  multiple: true,\r\n                  dicData: [],\r\n                  props: {\r\n                    label: \"postName\",\r\n                    value: \"id\"\r\n                  },\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请选择所属岗位\",\r\n                    trigger: \"click\"\r\n                  }],\r\n                },\r\n              ]\r\n            },\r\n          ]\r\n        },\r\n        data: [],\r\n        excelForm: {},\r\n        excelOption: {\r\n          submitBtn: false,\r\n          emptyBtn: false,\r\n          column: [\r\n            {\r\n              label: '模板上传',\r\n              prop: 'excelFile',\r\n              type: 'upload',\r\n              drag: true,\r\n              loadText: '模板上传中，请稍等',\r\n              span: 24,\r\n              propsHttp: {\r\n                res: 'data'\r\n              },\r\n              tip: '请上传 .xls,.xlsx 标准格式文件',\r\n              action: \"/api/blade-user/import-user\"\r\n            },\r\n            {\r\n              label: \"数据覆盖\",\r\n              prop: \"isCovered\",\r\n              type: \"switch\",\r\n              align: \"center\",\r\n              width: 80,\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1\r\n                }\r\n              ],\r\n              value: 0,\r\n              slot: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择是否覆盖\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: '模板下载',\r\n              prop: 'excelTemplate',\r\n              formslot: true,\r\n              span: 24,\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    watch: {\r\n      'form.tenantId'() {\r\n        if (this.form.tenantId !== '' && this.initFlag) {\r\n          this.initData(this.form.tenantId);\r\n        }\r\n      },\r\n      'excelForm.isCovered'() {\r\n        if (this.excelForm.isCovered !== '') {\r\n          const column = this.findObject(this.excelOption.column, \"excelFile\");\r\n          column.action = `/api/blade-user/import-user?isCovered=${this.excelForm.isCovered}`;\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"userInfo\", \"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.user_add, false),\r\n          viewBtn: this.vaildData(this.permission.user_view, false),\r\n          delBtn: this.vaildData(this.permission.user_delete, false),\r\n          editBtn: this.vaildData(this.permission.user_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n    },\r\n    mounted() {\r\n      // 非租户模式默认加载管理组数据\r\n      if (!website.tenantMode) {\r\n        this.initData(website.tenantId);\r\n      }\r\n    },\r\n    methods: {\r\n      nodeClick(data) {\r\n        this.treeDeptId = data.id;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page);\r\n      },\r\n      initData(tenantId) {\r\n        getRoleTree(tenantId).then(res => {\r\n          const column = this.findObject(this.option.group, \"roleId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n        getDeptTree(tenantId).then(res => {\r\n          const column = this.findObject(this.option.group, \"deptId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n        getPostList(tenantId).then(res => {\r\n          const column = this.findObject(this.option.group, \"postId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n      },\r\n      submitRole() {\r\n        const roleList = this.$refs.treeRole.getCheckedKeys().join(\",\");\r\n        grant(this.ids, roleList).then(() => {\r\n          this.roleBox = false;\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.onLoad(this.page);\r\n        });\r\n      },\r\n      rowSave(row, done, loading) {\r\n        row.deptId = row.deptId.join(\",\");\r\n        row.roleId = row.roleId.join(\",\");\r\n        row.postId = row.postId.join(\",\");\r\n        add(row).then(() => {\r\n          this.initFlag = false;\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        row.deptId = row.deptId.join(\",\");\r\n        row.roleId = row.roleId.join(\",\");\r\n        row.postId = row.postId.join(\",\");\r\n        update(row).then(() => {\r\n          this.initFlag = false;\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.treeDeptId = '';\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleReset() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return resetPassword(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleGrant() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.roleTreeObj = [];\r\n        if (this.selectionList.length === 1) {\r\n          this.roleTreeObj = this.selectionList[0].roleId.split(\",\");\r\n        }\r\n        getRoleTree().then(res => {\r\n          this.roleGrantList = res.data.data;\r\n          this.roleBox = true;\r\n        });\r\n      },\r\n      handleImport() {\r\n        this.excelBox = true;\r\n      },\r\n      uploadAfter(res, done, loading, column) {\r\n        window.console.log(column);\r\n        this.excelBox = false;\r\n        this.refreshChange();\r\n        done();\r\n      },\r\n      handleExport() {\r\n        this.$confirm(\"是否导出用户数据?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          const searchForm = this.$refs.crud.searchForm;\r\n          window.open(`/api/blade-user/export-user?${this.website.tokenHeader}=${getToken()}&account=${searchForm.account}&realName=${searchForm.realName}`);\r\n        });\r\n      },\r\n      handleTemplate() {\r\n        window.open(`/api/blade-user/export-template?${this.website.tokenHeader}=${getToken()}`);\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getUser(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n            if(this.form.hasOwnProperty(\"deptId\")){\r\n              this.form.deptId = this.form.deptId.split(\",\");\r\n            }\r\n            if(this.form.hasOwnProperty(\"roleId\")){\r\n              this.form.roleId = this.form.roleId.split(\",\");\r\n            }\r\n            if(this.form.hasOwnProperty(\"postId\")){\r\n              this.form.postId = this.form.postId.split(\",\");\r\n            }\r\n          });\r\n        }\r\n        this.initFlag = true;\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query), this.treeDeptId).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .box {\r\n    height: 800px;\r\n  }\r\n\r\n  .el-scrollbar {\r\n    height: 100%;\r\n  }\r\n\r\n  .box .el-scrollbar__wrap {\r\n    overflow: scroll;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/system"}]}