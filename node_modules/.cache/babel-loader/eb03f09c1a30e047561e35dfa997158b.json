{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\util\\flow.js","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\util\\flow.js","mtime":1592365966749},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\n\n/**\r\n * 工作流统一分类格式\r\n * @param category 分类字典号\r\n * @returns {string}\r\n */\nexport function flowCategory(category) {\n  return \"flow_\".concat(category);\n}\n/**\r\n * 根据key获取流程路由\r\n * @param routes\r\n * @param key\r\n */\n\nexport function flowRoute(routes, key) {\n  var data = routes.filter(function (d) {\n    return d.routeKey === key;\n  });\n  return data.length === 0 ? [] : data[0].routeValue;\n}",{"version":3,"sources":["F:/A---Spring/bladeX/blade/Saber/src/util/flow.js"],"names":["flowCategory","category","flowRoute","routes","key","data","filter","d","routeKey","length","routeValue"],"mappings":";;AAAA;;;;;AAKA,OAAO,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,wBAAeA,QAAf;AACD;AAED;;;;;;AAKA,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAAgC;AACrC,MAAMC,IAAI,GAAGF,MAAM,CAACG,MAAP,CAAc,UAAAC,CAAC,EAAI;AAC9B,WAAOA,CAAC,CAACC,QAAF,KAAeJ,GAAtB;AACD,GAFY,CAAb;AAGA,SAAOC,IAAI,CAACI,MAAL,KAAgB,CAAhB,GAAoB,EAApB,GAAyBJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,UAAxC;AACD","sourcesContent":["/**\r\n * 工作流统一分类格式\r\n * @param category 分类字典号\r\n * @returns {string}\r\n */\r\nexport function flowCategory(category) {\r\n  return `flow_${category}`;\r\n}\r\n\r\n/**\r\n * 根据key获取流程路由\r\n * @param routes\r\n * @param key\r\n */\r\nexport function flowRoute(routes, key) {\r\n  const data = routes.filter(d => {\r\n    return d.routeKey === key;\r\n  });\r\n  return data.length === 0 ? [] : data[0].routeValue;\r\n}\r\n"]}]}