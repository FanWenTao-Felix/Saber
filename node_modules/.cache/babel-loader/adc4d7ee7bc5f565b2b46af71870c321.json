{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\flow\\model.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\flow\\model.vue","mtime":1592365966758},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"F:/A---Spring/bladeX/blade/Saber/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.filter\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nimport { modelList, removeModel, deployModel } from \"@/api/flow/flow\";\nimport { flowCategory } from \"@/util/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      optionDeploy: {\n        menuBtn: false,\n        column: [{\n          label: \"流程类型\",\n          type: \"select\",\n          dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          dataType: \"number\",\n          slot: true,\n          prop: \"categoryValue\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请选择流程类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"流程模式\",\n          prop: \"flowMode\",\n          type: \"radio\",\n          dicData: [{\n            label: \"通用流程\",\n            value: 1\n          }, {\n            label: \"定制流程\",\n            value: 2\n          }],\n          value: 1,\n          span: 24,\n          rules: [{\n            required: true,\n            message: '请选择流程模式',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          multiple: true,\n          dicUrl: \"/api/blade-system/tenant/select\",\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          display: false,\n          span: 24,\n          rules: [{\n            required: true,\n            message: '请选择所属租户',\n            trigger: 'blur'\n          }]\n        }]\n      },\n      selectionId: '',\n      selectionList: [],\n      query: {},\n      loading: true,\n      deployLoading: false,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      deployBox: false,\n      flowBox: false,\n      flowUrl: '',\n      option: {\n        height: 'auto',\n        calcHeight: 30,\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        border: true,\n        index: true,\n        selection: true,\n        editBtn: false,\n        addBtn: false,\n        viewBtn: false,\n        delBtn: false,\n        dialogWidth: 900,\n        menuWidth: 150,\n        dialogClickModal: false,\n        column: [{\n          label: '模型主键',\n          prop: 'id'\n        }, {\n          label: '模型标识',\n          prop: 'modelKey',\n          search: true,\n          width: 150\n        }, {\n          label: '模型名称',\n          prop: 'name',\n          search: true,\n          width: 150\n        }, {\n          label: '流程版本',\n          prop: 'version',\n          slot: true,\n          width: 80\n        }, {\n          label: '创建时间',\n          prop: 'created',\n          width: 165\n        }, {\n          label: '更新时间',\n          prop: 'lastUpdated',\n          width: 165\n        }]\n      },\n      data: []\n    };\n  },\n  watch: {\n    'form.flowMode': function formFlowMode() {\n      var _this = this;\n\n      this.$refs.form.option.column.filter(function (item) {\n        if (item.prop === \"tenantId\") {\n          item.display = _this.form.flowMode === 2;\n        }\n      });\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    handleSubmit: function handleSubmit(form, done) {\n      var _this2 = this;\n\n      this.deployLoading = true;\n      deployModel({\n        modelId: this.selectionId,\n        category: flowCategory(form.categoryValue),\n        tenantIds: form.tenantId.join(\",\")\n      }).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this2.$message({\n            type: \"success\",\n            message: data.msg\n          });\n\n          done();\n\n          _this2.$refs.form.resetForm();\n\n          _this2.deployBox = false;\n          _this2.deployLoading = false;\n        } else {\n          done();\n          _this2.deployLoading = false;\n\n          _this2.$message({\n            type: \"warn\",\n            message: data.msg\n          });\n        }\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this3 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return removeModel(_this3.ids);\n      }).then(function () {\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this3.$refs.crud.toggleSelection();\n\n        _this3.onLoad(_this3.page);\n      });\n    },\n    handleCreate: function handleCreate() {\n      this.flowUrl = \"\".concat(website.flowDesignUrl, \"/index.html\");\n      this.flowBox = true;\n    },\n    handleUpdate: function handleUpdate(row) {\n      this.flowUrl = \"\".concat(website.flowDesignUrl, \"/index.html#/editor/\").concat(row.id);\n      this.flowBox = true;\n    },\n    handleDeploy: function handleDeploy(row) {\n      this.deployBox = true;\n      this.selectionId = row.id;\n    },\n    handleDoDeploy: function handleDoDeploy() {\n      this.$refs.form.submit();\n    },\n    handleDownload: function handleDownload(row) {\n      window.open(\"\".concat(website.flowDesignUrl, \"/app/rest/models/\").concat(row.id, \"/bpmn20\"));\n    },\n    handleSlotDelete: function handleSlotDelete(row) {\n      var _this4 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return removeModel(row.id);\n      }).then(function () {\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this4.$refs.crud.toggleSelection();\n\n        _this4.onLoad(_this4.page);\n      });\n    },\n    handleRefresh: function handleRefresh() {\n      this.flowBox = false;\n      this.onLoad(this.page);\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this5 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      modelList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this5.page.total = data.total;\n        _this5.data = data.records;\n        _this5.loading = false;\n\n        _this5.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"sources":["model.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :page=\"page\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-circle-plus\"\r\n                   v-if=\"permission.flow_model_create\"\r\n                   plain\r\n                   @click=\"handleCreate\">创 建\r\n        </el-button>\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   v-if=\"permission.flow_model_delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.flow_model_update\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleUpdate(scope.row,scope.index)\">配置\r\n        </el-button>\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.flow_model_deploy\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleDeploy(scope.row,scope.index)\">部署\r\n        </el-button>\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.flow_model_download\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleDownload(scope.row,scope.index)\">下载\r\n        </el-button>\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.flow_model_delete\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleSlotDelete(scope.row,scope.index)\">删除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"version\">\r\n        <el-tag>v{{row.version}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"流程配置\"\r\n               append-to-body\r\n               :visible.sync=\"flowBox\"\r\n               :fullscreen=\"true\">\r\n      <iframe\r\n        :src=flowUrl\r\n        width=\"100%\"\r\n        height=\"700\"\r\n        title=\"流程设计器\"\r\n        frameBorder=\"no\"\r\n        border=\"0\"\r\n        marginWidth=\"0\"\r\n        marginHeight=\"0\"\r\n        scrolling=\"no\"\r\n        allowTransparency=\"yes\">\r\n      </iframe>\r\n      <span slot=\"footer\"\r\n            class=\"dialog-footer\">\r\n        <el-button @click=\"flowBox = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleRefresh\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-dialog title=\"流程部署\"\r\n               append-to-body\r\n               :visible.sync=\"deployBox\"\r\n               width=\"20%\">\r\n      <avue-form ref=\"form\" :option=\"optionDeploy\" v-model=\"form\" @submit=\"handleSubmit\"/>\r\n      <span slot=\"footer\"\r\n            class=\"dialog-footer\">\r\n        <el-button @click=\"deployBox = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleDoDeploy\" :loading=\"deployLoading\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {mapGetters} from \"vuex\";\r\n  import website from '@/config/website';\r\n  import {modelList, removeModel, deployModel} from \"@/api/flow/flow\";\r\n  import {flowCategory} from \"@/util/flow\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        optionDeploy: {\r\n          menuBtn: false,\r\n          column: [\r\n            {\r\n              label: \"流程类型\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              slot: true,\r\n              prop: \"categoryValue\",\r\n              search: true,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择流程类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"流程模式\",\r\n              prop: \"flowMode\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"通用流程\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"定制流程\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              value: 1,\r\n              span: 24,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择流程模式',\r\n                  trigger: 'blur'\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantId\",\r\n              type: \"tree\",\r\n              multiple: true,\r\n              dicUrl: \"/api/blade-system/tenant/select\",\r\n              props: {\r\n                label: \"tenantName\",\r\n                value: \"tenantId\"\r\n              },\r\n              display: false,\r\n              span: 24,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择所属租户',\r\n                  trigger: 'blur'\r\n                }\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        selectionId: '',\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        deployLoading: false,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        deployBox: false,\r\n        flowBox: false,\r\n        flowUrl: '',\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 30,\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          editBtn: false,\r\n          addBtn: false,\r\n          viewBtn: false,\r\n          delBtn: false,\r\n          dialogWidth: 900,\r\n          menuWidth: 150,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: '模型主键',\r\n              prop: 'id',\r\n            },\r\n            {\r\n              label: '模型标识',\r\n              prop: 'modelKey',\r\n              search: true,\r\n              width: 150,\r\n            },\r\n            {\r\n              label: '模型名称',\r\n              prop: 'name',\r\n              search: true,\r\n              width: 150,\r\n            },\r\n            {\r\n              label: '流程版本',\r\n              prop: 'version',\r\n              slot: true,\r\n              width: 80,\r\n            },\r\n            {\r\n              label: '创建时间',\r\n              prop: 'created',\r\n              width: 165,\r\n            },\r\n            {\r\n              label: '更新时间',\r\n              prop: 'lastUpdated',\r\n              width: 165,\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    watch: {\r\n      'form.flowMode'() {\r\n        this.$refs.form.option.column.filter(item => {\r\n          if (item.prop === \"tenantId\") {\r\n            item.display = this.form.flowMode === 2;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      handleSubmit(form, done) {\r\n        this.deployLoading = true;\r\n        deployModel({\r\n          modelId: this.selectionId,\r\n          category: flowCategory(form.categoryValue),\r\n          tenantIds: form.tenantId.join(\",\")\r\n        }).then(res => {\r\n          const data = res.data;\r\n          if (data.success) {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: data.msg\r\n            });\r\n            done();\r\n            this.$refs.form.resetForm();\r\n            this.deployBox = false;\r\n            this.deployLoading = false;\r\n          } else {\r\n            done();\r\n            this.deployLoading = false;\r\n            this.$message({\r\n              type: \"warn\",\r\n              message: data.msg\r\n            });\r\n          }\r\n        })\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeModel(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n            this.onLoad(this.page);\r\n          });\r\n      },\r\n      handleCreate() {\r\n        this.flowUrl = `${website.flowDesignUrl}/index.html`;\r\n        this.flowBox = true;\r\n      },\r\n      handleUpdate(row) {\r\n        this.flowUrl = `${website.flowDesignUrl}/index.html#/editor/${row.id}`;\r\n        this.flowBox = true;\r\n      },\r\n      handleDeploy(row) {\r\n        this.deployBox = true;\r\n        this.selectionId = row.id;\r\n      },\r\n      handleDoDeploy() {\r\n        this.$refs.form.submit();\r\n      },\r\n      handleDownload(row) {\r\n        window.open(`${website.flowDesignUrl}/app/rest/models/${row.id}/bpmn20`);\r\n      },\r\n      handleSlotDelete(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeModel(row.id);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n            this.onLoad(this.page);\r\n          });\r\n      },\r\n      handleRefresh() {\r\n        this.flowBox = false;\r\n        this.onLoad(this.page);\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        modelList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .none-border {\r\n    border: 0;\r\n    background-color: transparent !important;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/flow"}]}