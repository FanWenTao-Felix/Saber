{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\system\\menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\system\\menu.vue","mtime":1592365966764},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"F:/A---Spring/bladeX/blade/Saber/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.filter\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getLazyList, remove, update, add, getMenu } from \"@/api/system/menu\";\nimport { mapGetters } from \"vuex\";\nimport iconList from \"@/config/iconList\";\nimport func from \"@/util/func\";\nimport { getMenuTree } from \"@/api/system/menu\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      selectionList: [],\n      parentId: 0,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      option: {\n        lazy: true,\n        tip: false,\n        simplePage: true,\n        searchShow: true,\n        searchMenuSpan: 6,\n        dialogWidth: \"60%\",\n        tree: true,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        menuWidth: 300,\n        dialogClickModal: false,\n        column: [{\n          label: \"菜单名称\",\n          prop: \"name\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"路由地址\",\n          prop: \"path\",\n          rules: [{\n            required: true,\n            message: \"请输入路由地址\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"上级菜单\",\n          prop: \"parentId\",\n          type: \"tree\",\n          dicData: [],\n          hide: true,\n          props: {\n            label: \"title\"\n          },\n          rules: [{\n            required: false,\n            message: \"请选择上级菜单\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"菜单图标\",\n          prop: \"source\",\n          type: \"icon-select\",\n          slot: true,\n          iconList: iconList,\n          rules: [{\n            required: true,\n            message: \"请输入菜单图标\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"菜单编号\",\n          prop: \"code\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单类型\",\n          prop: \"category\",\n          type: \"radio\",\n          dicData: [{\n            label: \"菜单\",\n            value: 1\n          }, {\n            label: \"按钮\",\n            value: 2\n          }],\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请选择菜单类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单别名\",\n          prop: \"alias\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入菜单别名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单排序\",\n          prop: \"sort\",\n          type: \"number\",\n          rules: [{\n            required: true,\n            message: \"请输入菜单排序\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"菜单备注\",\n          prop: \"remark\",\n          type: \"textarea\",\n          span: 24,\n          minRows: 2,\n          hide: true\n        }]\n      },\n      data: []\n    };\n  },\n  watch: {\n    'form.category': function formCategory() {\n      var category = func.toInt(this.form.category);\n      this.$refs.crud.option.column.filter(function (item) {\n        if (item.prop === \"path\") {\n          item.rules[0].required = category === 1;\n        }\n      });\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"userInfo\", \"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.menu_add, false),\n        viewBtn: this.vaildData(this.permission.menu_view, false),\n        delBtn: this.vaildData(this.permission.menu_delete, false),\n        editBtn: this.vaildData(this.permission.menu_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      getMenuTree().then(function (res) {\n        var column = _this.findObject(_this.option.column, \"parentId\");\n\n        column.dicData = res.data.data;\n      });\n    },\n    handleAdd: function handleAdd(row) {\n      this.$refs.crud.value.parentId = row.id;\n      this.$refs.crud.option.column.filter(function (item) {\n        if (item.prop === \"parentId\") {\n          item.value = row.id;\n          item.addDisabled = true;\n        }\n      });\n      this.$refs.crud.rowAdd();\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n\n      add(row).then(function (res) {\n        // 获取新增数据的相关字段\n        var data = res.data.data;\n        row.id = data.id;\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        }); // 数据回调进行刷新\n\n\n        done(row);\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n\n      update(row).then(function () {\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        }); // 数据回调进行刷新\n\n\n        done(row);\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row, index, done) {\n      var _this4 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        }); // 数据回调进行刷新\n\n\n        done(row);\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        // 刷新表格数据并重载\n        _this5.data = [];\n        _this5.parentId = 0;\n\n        _this5.$refs.crud.refreshTable();\n\n        _this5.$refs.crud.toggleSelection(); // 表格数据重载\n\n\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.parentId = 0;\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.parentId = '';\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this6 = this;\n\n      if ([\"add\", \"edit\"].includes(type)) {\n        this.initData();\n      }\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getMenu(this.form.id).then(function (res) {\n          _this6.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    beforeClose: function beforeClose(done) {\n      this.$refs.crud.tableForm = {};\n      this.$refs.crud.value.parentId = \"\";\n      this.$refs.crud.value.addDisabled = false;\n      this.$refs.crud.option.column.filter(function (item) {\n        if (item.prop === \"parentId\") {\n          item.value = \"\";\n          item.addDisabled = false;\n        }\n      });\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getLazyList(this.parentId, Object.assign(params, this.query)).then(function (res) {\n        _this7.data = res.data.data;\n        _this7.loading = false;\n\n        _this7.selectionClear();\n      });\n    },\n    treeLoad: function treeLoad(tree, treeNode, resolve) {\n      var parentId = tree.id;\n      getLazyList(parentId).then(function (res) {\n        resolve(res.data.data);\n      });\n    }\n  }\n};",{"version":3,"sources":["menu.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               :before-close=\"beforeClose\"\r\n               @row-del=\"rowDel\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               @on-load=\"onLoad\"\r\n               @tree-load=\"treeLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   v-if=\"permission.menu_delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button\r\n          type=\"text\"\r\n          icon=\"el-icon-circle-plus-outline\"\r\n          size=\"small\"\r\n          @click.stop=\"handleAdd(scope.row,scope.index)\"\r\n          v-if=\"userInfo.role_name.includes('admin')\"\r\n        >新增子项\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"source\">\r\n        <div style=\"text-align:center\">\r\n          <i :class=\"row.source\"/>\r\n        </div>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getLazyList, remove, update, add, getMenu} from \"@/api/system/menu\";\r\n  import {mapGetters} from \"vuex\";\r\n  import iconList from \"@/config/iconList\";\r\n  import func from \"@/util/func\";\r\n  import {getMenuTree} from \"@/api/system/menu\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        selectionList: [],\r\n        parentId: 0,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0,\r\n        },\r\n        option: {\r\n          lazy: true,\r\n          tip: false,\r\n          simplePage: true,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          dialogWidth: \"60%\",\r\n          tree: true,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          menuWidth: 300,\r\n          dialogClickModal: false,\r\n          column: [\r\n            {\r\n              label: \"菜单名称\",\r\n              prop: \"name\",\r\n              search: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单名称\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"路由地址\",\r\n              prop: \"path\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入路由地址\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"上级菜单\",\r\n              prop: \"parentId\",\r\n              type: \"tree\",\r\n              dicData: [],\r\n              hide: true,\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              rules: [\r\n                {\r\n                  required: false,\r\n                  message: \"请选择上级菜单\",\r\n                  trigger: \"click\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单图标\",\r\n              prop: \"source\",\r\n              type: \"icon-select\",\r\n              slot: true,\r\n              iconList: iconList,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单图标\",\r\n                  trigger: \"click\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单编号\",\r\n              prop: \"code\",\r\n              search: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单编号\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单类型\",\r\n              prop: \"category\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"菜单\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"按钮\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              hide: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择菜单类型\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单别名\",\r\n              prop: \"alias\",\r\n              search: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单别名\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入菜单排序\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"菜单备注\",\r\n              prop: \"remark\",\r\n              type: \"textarea\",\r\n              span: 24,\r\n              minRows: 2,\r\n              hide: true\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    watch: {\r\n      'form.category'() {\r\n        const category = func.toInt(this.form.category);\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"path\") {\r\n            item.rules[0].required = category === 1;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"userInfo\", \"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.menu_add, false),\r\n          viewBtn: this.vaildData(this.permission.menu_view, false),\r\n          delBtn: this.vaildData(this.permission.menu_delete, false),\r\n          editBtn: this.vaildData(this.permission.menu_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      initData() {\r\n        getMenuTree().then(res => {\r\n          const column = this.findObject(this.option.column, \"parentId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n      },\r\n      handleAdd(row) {\r\n        this.$refs.crud.value.parentId = row.id;\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"parentId\") {\r\n            item.value = row.id;\r\n            item.addDisabled = true;\r\n          }\r\n        });\r\n        this.$refs.crud.rowAdd();\r\n      },\r\n      rowSave(row, done, loading) {\r\n        add(row).then((res) => {\r\n          // 获取新增数据的相关字段\r\n          const data = res.data.data;\r\n          row.id = data.id;\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          // 数据回调进行刷新\r\n          done(row);\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          // 数据回调进行刷新\r\n          done(row);\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row, index, done) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            // 数据回调进行刷新\r\n            done(row);\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            // 刷新表格数据并重载\r\n            this.data = [];\r\n            this.parentId = 0;\r\n            this.$refs.crud.refreshTable();\r\n            this.$refs.crud.toggleSelection();\r\n            // 表格数据重载\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.parentId = 0;\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.parentId = '';\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"add\", \"edit\"].includes(type)) {\r\n          this.initData();\r\n        }\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getMenu(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      beforeClose(done) {\r\n        this.$refs.crud.tableForm = {};\r\n        this.$refs.crud.value.parentId = \"\";\r\n        this.$refs.crud.value.addDisabled = false;\r\n        this.$refs.crud.option.column.filter(item => {\r\n          if (item.prop === \"parentId\") {\r\n            item.value = \"\";\r\n            item.addDisabled = false;\r\n          }\r\n        });\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getLazyList(this.parentId, Object.assign(params, this.query)).then(res => {\r\n          this.data = res.data.data;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      treeLoad(tree, treeNode, resolve) {\r\n        const parentId = tree.id;\r\n        getLazyList(parentId).then(res => {\r\n          resolve(res.data.data);\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views/system"}]}