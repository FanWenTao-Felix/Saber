{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\flow\\deploy.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\flow\\deploy.vue","mtime":1592365966757},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\n//\n//\n//\n//\n//\n//\nimport { deployUpload } from \"@/api/flow/flow\";\nimport { flowCategory } from \"@/util/flow\";\nexport default {\n  data: function data() {\n    return {\n      form: {\n        flowCategory: '',\n        tenantId: '',\n        flowFile: [],\n        file: {}\n      },\n      option: {\n        labelWidth: 120,\n        menuBtn: false,\n        column: [{\n          label: '流程类型',\n          prop: 'flowCategory',\n          type: 'select',\n          dicUrl: \"/api/blade-system/dict/dictionary?code=flow\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          row: true,\n          span: 12,\n          dataType: \"number\",\n          rules: [{\n            required: true,\n            message: '请选择流程类型',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"流程模式\",\n          prop: \"flowMode\",\n          type: \"radio\",\n          dicData: [{\n            label: \"通用流程\",\n            value: 1\n          }, {\n            label: \"定制流程\",\n            value: 2\n          }],\n          value: 1,\n          row: true,\n          span: 12,\n          rules: [{\n            required: true,\n            message: '请选择流程模式',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          multiple: true,\n          dicUrl: \"/api/blade-system/tenant/select\",\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          display: false,\n          row: true,\n          span: 12,\n          rules: [{\n            required: true,\n            message: '请选择所属租户',\n            trigger: 'blur'\n          }]\n        }, {\n          label: '附件上传',\n          prop: 'flowFile',\n          type: 'upload',\n          loadText: '附件上传中，请稍等',\n          span: 24,\n          propsHttp: {\n            res: 'data'\n          },\n          tip: '请上传 bpmn20.xml 标准格式文件',\n          action: '/api/blade-flow/manager/check-upload'\n        }]\n      }\n    };\n  },\n  watch: {\n    'form.flowMode': function formFlowMode() {\n      var _this = this;\n\n      this.$refs.form.option.column.filter(function (item) {\n        if (item.prop === \"tenantId\") {\n          item.display = _this.form.flowMode === 2;\n        }\n      });\n    }\n  },\n  methods: {\n    uploadBefore: function uploadBefore(file, done) {\n      this.$message.success('部署开始');\n      this.file = file;\n      done();\n    },\n    uploadAfter: function uploadAfter(res, done, loading) {\n      var _this2 = this;\n\n      if (!this.form.flowCategory) {\n        this.$message.warning('清先选择流程类型');\n        loading();\n        return false;\n      }\n\n      if (this.form.flowMode === 2 && !this.form.tenantId) {\n        this.$message.warning('清先选择对应租户');\n        loading();\n        return false;\n      }\n\n      if (res.success) {\n        deployUpload(flowCategory(this.form.flowCategory), this.form.tenantId ? this.form.tenantId.join(\",\") : \"\", [this.file]).then(function (res) {\n          var data = res.data;\n\n          if (data.success) {\n            done();\n          } else {\n            _this2.$message.error(data.msg);\n\n            loading();\n          }\n        });\n      } else {\n        this.$message.warning('请上传 bpmn20.xml 标准格式文件');\n        loading();\n        return false;\n      }\n    }\n  }\n};",{"version":3,"sources":["deploy.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-form ref=\"form\" :option=\"option\" v-model=\"form\" :upload-before=\"uploadBefore\" :upload-after=\"uploadAfter\"/>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {deployUpload} from \"@/api/flow/flow\";\r\n  import {flowCategory} from \"@/util/flow\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {\r\n          flowCategory: '',\r\n          tenantId: '',\r\n          flowFile: [],\r\n          file: {},\r\n        },\r\n        option: {\r\n          labelWidth: 120,\r\n          menuBtn: false,\r\n          column: [\r\n            {\r\n              label: '流程类型',\r\n              prop: 'flowCategory',\r\n              type: 'select',\r\n              dicUrl: `/api/blade-system/dict/dictionary?code=flow`,\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              row: true,\r\n              span: 12,\r\n              dataType: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择流程类型',\r\n                  trigger: 'blur'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"流程模式\",\r\n              prop: \"flowMode\",\r\n              type: \"radio\",\r\n              dicData: [\r\n                {\r\n                  label: \"通用流程\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"定制流程\",\r\n                  value: 2\r\n                }\r\n              ],\r\n              value: 1,\r\n              row: true,\r\n              span: 12,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择流程模式',\r\n                  trigger: 'blur'\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantId\",\r\n              type: \"tree\",\r\n              multiple: true,\r\n              dicUrl: \"/api/blade-system/tenant/select\",\r\n              props: {\r\n                label: \"tenantName\",\r\n                value: \"tenantId\"\r\n              },\r\n              display: false,\r\n              row: true,\r\n              span: 12,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择所属租户',\r\n                  trigger: 'blur'\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              label: '附件上传',\r\n              prop: 'flowFile',\r\n              type: 'upload',\r\n              loadText: '附件上传中，请稍等',\r\n              span: 24,\r\n              propsHttp: {\r\n                res: 'data'\r\n              },\r\n              tip: '请上传 bpmn20.xml 标准格式文件',\r\n              action: '/api/blade-flow/manager/check-upload'\r\n            },\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      'form.flowMode'() {\r\n        this.$refs.form.option.column.filter(item => {\r\n          if (item.prop === \"tenantId\") {\r\n            item.display = this.form.flowMode === 2;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    methods: {\r\n      uploadBefore(file, done) {\r\n        this.$message.success('部署开始');\r\n        this.file = file;\r\n        done()\r\n      },\r\n      uploadAfter(res, done, loading) {\r\n        if (!this.form.flowCategory) {\r\n          this.$message.warning('清先选择流程类型');\r\n          loading()\r\n          return false;\r\n        }\r\n        if (this.form.flowMode === 2 && !this.form.tenantId) {\r\n          this.$message.warning('清先选择对应租户');\r\n          loading();\r\n          return false;\r\n        }\r\n        if (res.success) {\r\n          deployUpload(\r\n            flowCategory(this.form.flowCategory),\r\n            (this.form.tenantId) ? this.form.tenantId.join(\",\") : \"\",\r\n            [this.file]\r\n          ).then(res => {\r\n            const data = res.data;\r\n            if (data.success) {\r\n              done()\r\n            } else {\r\n              this.$message.error(data.msg);\r\n              loading()\r\n            }\r\n          })\r\n        } else {\r\n          this.$message.warning('请上传 bpmn20.xml 标准格式文件');\r\n          loading()\r\n          return false;\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/flow"}]}