{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\api\\flow\\flow.js","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\api\\flow\\flow.js","mtime":1592365966688},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"F:/A---Spring/bladeX/blade/Saber/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport request from '@/router/axios';\nexport var modelList = function modelList(current, size, params) {\n  return request({\n    url: '/api/blade-flow/model/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var managerList = function managerList(current, size, params) {\n  return request({\n    url: '/api/blade-flow/manager/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var followList = function followList(current, size, params) {\n  return request({\n    url: '/api/blade-flow/follow/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var removeModel = function removeModel(ids) {\n  return request({\n    url: '/api/blade-flow/model/remove',\n    method: 'post',\n    params: {\n      ids: ids\n    }\n  });\n};\nexport var deployModel = function deployModel(params) {\n  return request({\n    url: '/api/blade-flow/model/deploy',\n    method: 'post',\n    params: params\n  });\n};\nexport var changeState = function changeState(params) {\n  return request({\n    url: '/api/blade-flow/manager/change-state',\n    method: 'post',\n    params: params\n  });\n};\nexport var deployUpload = function deployUpload(category, tenantIds, files) {\n  var formData = new FormData();\n  formData.append('category', category);\n  formData.append('tenantIds', tenantIds);\n  files.forEach(function (file) {\n    formData.append('files', file);\n  });\n  return request({\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    url: '/api/blade-flow/manager/deploy-upload',\n    method: 'post',\n    data: formData\n  });\n};\nexport var deleteDeployment = function deleteDeployment(deploymentIds) {\n  return request({\n    url: '/api/blade-flow/manager/delete-deployment',\n    method: 'post',\n    params: {\n      deploymentIds: deploymentIds\n    }\n  });\n};\nexport var deleteProcessInstance = function deleteProcessInstance(params) {\n  return request({\n    url: '/api/blade-flow/follow/delete-process-instance',\n    method: 'post',\n    params: params\n  });\n};",{"version":3,"sources":["F:/A---Spring/bladeX/blade/Saber/src/api/flow/flow.js"],"names":["request","modelList","current","size","params","url","method","managerList","followList","removeModel","ids","deployModel","changeState","deployUpload","category","tenantIds","files","formData","FormData","append","forEach","file","headers","data","deleteDeployment","deploymentIds","deleteProcessInstance"],"mappings":"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","sourcesContent":["import request from '@/router/axios';\r\n\r\nexport const modelList = (current, size, params) => {\r\n  return request({\r\n    url: '/api/blade-flow/model/list',\r\n    method: 'get',\r\n    params: {\r\n      ...params,\r\n      current,\r\n      size,\r\n    }\r\n  })\r\n}\r\n\r\nexport const managerList = (current, size, params) => {\r\n  return request({\r\n    url: '/api/blade-flow/manager/list',\r\n    method: 'get',\r\n    params: {\r\n      ...params,\r\n      current,\r\n      size,\r\n    }\r\n  })\r\n}\r\n\r\nexport const followList = (current, size, params) => {\r\n  return request({\r\n    url: '/api/blade-flow/follow/list',\r\n    method: 'get',\r\n    params: {\r\n      ...params,\r\n      current,\r\n      size,\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const removeModel = (ids) => {\r\n  return request({\r\n    url: '/api/blade-flow/model/remove',\r\n    method: 'post',\r\n    params: {\r\n      ids,\r\n    }\r\n  })\r\n}\r\n\r\nexport const deployModel = (params) => {\r\n  return request({\r\n    url: '/api/blade-flow/model/deploy',\r\n    method: 'post',\r\n    params\r\n  })\r\n}\r\n\r\nexport const changeState = (params) => {\r\n  return request({\r\n    url: '/api/blade-flow/manager/change-state',\r\n    method: 'post',\r\n    params\r\n  })\r\n}\r\n\r\nexport const deployUpload = (category, tenantIds, files) => {\r\n  const formData = new FormData();\r\n  formData.append('category', category);\r\n  formData.append('tenantIds', tenantIds);\r\n  files.forEach(file => {\r\n    formData.append('files', file);\r\n  });\r\n  return request({\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    },\r\n    url: '/api/blade-flow/manager/deploy-upload',\r\n    method: 'post',\r\n    data: formData\r\n  })\r\n}\r\n\r\nexport const deleteDeployment = (deploymentIds) => {\r\n  return request({\r\n    url: '/api/blade-flow/manager/delete-deployment',\r\n    method: 'post',\r\n    params: {\r\n      deploymentIds,\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteProcessInstance = (params) => {\r\n  return request({\r\n    url: '/api/blade-flow/follow/delete-process-instance',\r\n    method: 'post',\r\n    params\r\n  })\r\n}\r\n"]}]}