{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\util\\demo\\dict-horizontal.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\util\\demo\\dict-horizontal.vue","mtime":1592365966772},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"F:/A---Spring/bladeX/blade/Saber/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getParentList, getChildList, remove, update, add, getDict } from \"@/api/system/dict\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      parentId: 0,\n      formParent: {},\n      formChild: {},\n      selectionList: [],\n      query: {},\n      loading: true,\n      pageParent: {\n        pageSize: 10,\n        pageSizes: [10, 30, 50, 100, 200],\n        currentPage: 1,\n        total: 0\n      },\n      pageChild: {\n        pageSize: 10,\n        pageSizes: [10, 30, 50, 100, 200],\n        currentPage: 1,\n        total: 0\n      },\n      dataParent: [],\n      dataChild: [],\n      option: {\n        tip: false,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tree: true,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        menuWidth: 300,\n        dialogWidth: 880,\n        column: [{\n          label: \"字典编号\",\n          prop: \"code\",\n          search: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入字典编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"字典键值\",\n          prop: \"dictKey\",\n          type: \"number\",\n          rules: [{\n            required: true,\n            message: \"请输入字典键值\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"字典名称\",\n          prop: \"dictValue\",\n          search: true,\n          align: \"center\",\n          rules: [{\n            required: true,\n            message: \"请输入字典名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"字典排序\",\n          prop: \"sort\",\n          type: \"number\",\n          rules: [{\n            required: true,\n            message: \"请输入字典排序\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"封存\",\n          prop: \"isSealed\",\n          type: \"select\",\n          dicData: [{\n            label: \"否\",\n            value: 0\n          }, {\n            label: \"是\",\n            value: 1\n          }],\n          slot: true,\n          rules: [{\n            required: true,\n            message: \"请选择封存\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"字典备注\",\n          prop: \"remark\",\n          search: true,\n          hide: true\n        }]\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.dict_add, false),\n        viewBtn: this.vaildData(this.permission.dict_view, false),\n        delBtn: this.vaildData(this.permission.dict_delete, false),\n        editBtn: this.vaildData(this.permission.dict_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowSave: function rowSave(row, done, loading) {\n      var _this = this;\n\n      add(row).then(function () {\n        _this.onLoadParent(_this.pageParent);\n\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this2 = this;\n\n      update(row).then(function () {\n        _this2.onLoadParent(_this2.pageParent);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this3 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this3.onLoadParent(_this3.pageParent);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleRowClick: function handleRowClick(row) {\n      this.parentId = row.id;\n      this.onLoadChild(this.pageChild);\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoadParent(this.pageParent);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.pageParent.currentPage = 1;\n      this.onLoadParent(this.pageParent, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    handleDelete: function handleDelete() {\n      var _this4 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this4.ids);\n      }).then(function () {\n        _this4.onLoadParent(_this4.pageParent);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this4.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this5 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDict(this.formParent.id).then(function (res) {\n          _this5.formParent = res.data.data;\n        });\n      }\n\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.pageParent.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.pageParent.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoadParent(this.page, this.query);\n    },\n    rowSaveChild: function rowSaveChild(row, done, loading) {\n      var _this6 = this;\n\n      add(row).then(function () {\n        _this6.onLoadChild(_this6.pageChild);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdateChild: function rowUpdateChild(row, index, done, loading) {\n      var _this7 = this;\n\n      update(row).then(function () {\n        _this7.onLoadChild(_this7.pageChild);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        done();\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDelChild: function rowDelChild(row) {\n      var _this8 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this8.onLoadChild(_this8.pageChild);\n\n        _this8.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchResetChild: function searchResetChild() {\n      this.query = {};\n      this.onLoadChild(this.pageChild);\n    },\n    searchChangeChild: function searchChangeChild(params, done) {\n      this.query = params;\n      this.pageChild.currentPage = 1;\n      this.onLoadChild(this.pageChild, params);\n      done();\n    },\n    selectionChangeChild: function selectionChangeChild(list) {\n      this.selectionList = list;\n    },\n    selectionClearChild: function selectionClearChild() {\n      this.selectionList = [];\n      this.$refs.crudChild.toggleSelection();\n    },\n    handleDeleteChild: function handleDeleteChild() {\n      var _this9 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this9.ids);\n      }).then(function () {\n        _this9.onLoadChild(_this9.pageChild);\n\n        _this9.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this9.$refs.crudChild.toggleSelection();\n      });\n    },\n    beforeOpenChild: function beforeOpenChild(done, type) {\n      var _this10 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDict(this.formChild.id).then(function (res) {\n          _this10.formChild = res.data.data;\n        });\n      }\n\n      done();\n    },\n    currentChangeChild: function currentChangeChild(currentPage) {\n      this.pageChild.currentPage = currentPage;\n    },\n    sizeChangeChild: function sizeChangeChild(pageSize) {\n      this.pageChild.pageSize = pageSize;\n    },\n    refreshChangeChild: function refreshChangeChild() {\n      this.onLoadChild(this.pageChild, this.query);\n    },\n    onLoadParent: function onLoadParent(page) {\n      var _this11 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getParentList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this11.pageParent.total = data.total;\n        _this11.dataParent = data.records;\n        _this11.loading = false;\n\n        _this11.selectionClear();\n      });\n    },\n    onLoadChild: function onLoadChild(page) {\n      var _this12 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getChildList(page.currentPage, page.pageSize, this.parentId, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this12.pageChild.total = data.total;\n        _this12.dataChild = data.records;\n        _this12.loading = false;\n\n        _this12.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"sources":["dict-horizontal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <basic-container>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <avue-crud\r\n            :option=\"option\"\r\n            :table-loading=\"loading\"\r\n            :data=\"dataParent\"\r\n            :page=\"pageParent\"\r\n            ref=\"crud\"\r\n            v-model=\"formParent\"\r\n            :permission=\"permissionList\"\r\n            :before-open=\"beforeOpen\"\r\n            @row-del=\"rowDel\"\r\n            @row-update=\"rowUpdate\"\r\n            @row-save=\"rowSave\"\r\n            @row-click=\"handleRowClick\"\r\n            @search-change=\"searchChange\"\r\n            @search-reset=\"searchReset\"\r\n            @selection-change=\"selectionChange\"\r\n            @current-change=\"currentChange\"\r\n            @size-change=\"sizeChange\"\r\n            @refresh-change=\"refreshChange\"\r\n            @on-load=\"onLoadParent\"\r\n          >\r\n            <template slot=\"menuLeft\">\r\n              <el-button\r\n                type=\"danger\"\r\n                size=\"small\"\r\n                icon=\"el-icon-delete\"\r\n                v-if=\"permission.dict_delete\"\r\n                plain\r\n                @click=\"handleDelete\"\r\n              >删 除\r\n              </el-button>\r\n            </template>\r\n            <template slot-scope=\"{row}\" slot=\"isSealed\">\r\n              <el-tag>{{row.isSealed===0?'否':'是'}}</el-tag>\r\n            </template>\r\n          </avue-crud>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <avue-crud\r\n            :option=\"option\"\r\n            :table-loading=\"loading\"\r\n            :data=\"dataChild\"\r\n            :page=\"pageChild\"\r\n            ref=\"crudChild\"\r\n            v-model=\"formChild\"\r\n            :permission=\"permissionList\"\r\n            :before-open=\"beforeOpenChild\"\r\n            @row-del=\"rowDelChild\"\r\n            @row-update=\"rowUpdateChild\"\r\n            @row-save=\"rowSaveChild\"\r\n            @search-change=\"searchChangeChild\"\r\n            @search-reset=\"searchResetChild\"\r\n            @selection-change=\"selectionChangeChild\"\r\n            @current-change=\"currentChangeChild\"\r\n            @size-change=\"sizeChangeChild\"\r\n            @refresh-change=\"refreshChangeChild\"\r\n            @on-load=\"onLoadChild\"\r\n          >\r\n            <template slot=\"menuLeft\">\r\n              <el-button\r\n                type=\"danger\"\r\n                size=\"small\"\r\n                icon=\"el-icon-delete\"\r\n                v-if=\"permission.dict_delete\"\r\n                plain\r\n                @click=\"handleDelete\"\r\n              >删 除\r\n              </el-button>\r\n            </template>\r\n            <template slot-scope=\"{row}\" slot=\"isSealed\">\r\n              <el-tag>{{row.isSealed===0?'否':'是'}}</el-tag>\r\n            </template>\r\n          </avue-crud>\r\n        </el-col>\r\n      </el-row>\r\n    </basic-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getParentList,\r\n    getChildList,\r\n    remove,\r\n    update,\r\n    add,\r\n    getDict,\r\n  } from \"@/api/system/dict\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        parentId: 0,\r\n        formParent: {},\r\n        formChild: {},\r\n        selectionList: [],\r\n        query: {},\r\n        loading: true,\r\n        pageParent: {\r\n          pageSize: 10,\r\n          pageSizes: [10, 30, 50, 100, 200],\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        pageChild: {\r\n          pageSize: 10,\r\n          pageSizes: [10, 30, 50, 100, 200],\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        dataParent: [],\r\n        dataChild: [],\r\n        option: {\r\n          tip: false,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          tree: true,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          menuWidth: 300,\r\n          dialogWidth: 880,\r\n          column: [\r\n            {\r\n              label: \"字典编号\",\r\n              prop: \"code\",\r\n              search: true,\r\n              span: 24,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典编号\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典键值\",\r\n              prop: \"dictKey\",\r\n              type: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典键值\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典名称\",\r\n              prop: \"dictValue\",\r\n              search: true,\r\n              align: \"center\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典名称\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请输入字典排序\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"封存\",\r\n              prop: \"isSealed\",\r\n              type: \"select\",\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1\r\n                }\r\n              ],\r\n              slot: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"请选择封存\",\r\n                  trigger: \"blur\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: \"字典备注\",\r\n              prop: \"remark\",\r\n              search: true,\r\n              hide: true\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.dict_add, false),\r\n          viewBtn: this.vaildData(this.permission.dict_view, false),\r\n          delBtn: this.vaildData(this.permission.dict_delete, false),\r\n          editBtn: this.vaildData(this.permission.dict_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoadParent(this.pageParent);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoadParent(this.pageParent);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoadParent(this.pageParent);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleRowClick(row) {\r\n        this.parentId = row.id;\r\n        this.onLoadChild(this.pageChild);\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoadParent(this.pageParent);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.pageParent.currentPage = 1;\r\n        this.onLoadParent(this.pageParent, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoadParent(this.pageParent);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDict(this.formParent.id).then(res => {\r\n            this.formParent = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.pageParent.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.pageParent.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoadParent(this.page, this.query);\r\n      },\r\n      rowSaveChild(row, done, loading) {\r\n        add(row).then(() => {\r\n          this.onLoadChild(this.pageChild);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdateChild(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          this.onLoadChild(this.pageChild);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          done();\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDelChild(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoadChild(this.pageChild);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchResetChild() {\r\n        this.query = {};\r\n        this.onLoadChild(this.pageChild);\r\n      },\r\n      searchChangeChild(params, done) {\r\n        this.query = params;\r\n        this.pageChild.currentPage = 1;\r\n        this.onLoadChild(this.pageChild, params);\r\n        done();\r\n      },\r\n      selectionChangeChild(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClearChild() {\r\n        this.selectionList = [];\r\n        this.$refs.crudChild.toggleSelection();\r\n      },\r\n      handleDeleteChild() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoadChild(this.pageChild);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crudChild.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpenChild(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDict(this.formChild.id).then(res => {\r\n            this.formChild = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      currentChangeChild(currentPage) {\r\n        this.pageChild.currentPage = currentPage;\r\n      },\r\n      sizeChangeChild(pageSize) {\r\n        this.pageChild.pageSize = pageSize;\r\n      },\r\n      refreshChangeChild() {\r\n        this.onLoadChild(this.pageChild, this.query);\r\n      },\r\n      onLoadParent(page, params = {}) {\r\n        this.loading = true;\r\n        getParentList(\r\n          page.currentPage,\r\n          page.pageSize,\r\n          Object.assign(params, this.query)\r\n        ).then(res => {\r\n          const data = res.data.data;\r\n          this.pageParent.total = data.total;\r\n          this.dataParent = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      onLoadChild(page, params = {}) {\r\n        this.loading = true;\r\n        getChildList(\r\n          page.currentPage,\r\n          page.pageSize,\r\n          this.parentId,\r\n          Object.assign(params, this.query)\r\n        ).then(res => {\r\n          const data = res.data.data;\r\n          this.pageChild.total = data.total;\r\n          this.dataChild = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views/util/demo"}]}