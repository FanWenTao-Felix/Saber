{"remainingRequest":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\work\\process\\leave\\handle.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\src\\views\\work\\process\\leave\\handle.vue","mtime":1592365966781},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\A---Spring\\bladeX\\blade\\Saber\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { historyFlowList, leaveDetail } from \"@/api/work/process\";\nimport { completeTask } from \"@/api/work/work\";\nexport default {\n  data: function data() {\n    return {\n      taskId: '',\n      businessId: '',\n      processInstanceId: '',\n      src: '',\n      flowList: [],\n      form: {\n        flow: {\n          assigneeName: ''\n        },\n        startTime: '',\n        endTime: '',\n        reason: '',\n        comment: ''\n      }\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {\n    // 在当前路由改变，但是该组件被复用时调用\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用\n    // 可以访问组件实例 `this`\n    if (to.fullPath !== from.fullPath) {\n      next();\n      this.init();\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.taskId = this.$route.params.taskId;\n      this.processInstanceId = this.$route.params.processInstanceId;\n      this.businessId = this.$route.params.businessId;\n      this.src = \"/api/blade-flow/process/diagram-view?processInstanceId=\".concat(this.$route.params.processInstanceId);\n      historyFlowList(this.processInstanceId).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this.flowList = data.data;\n        }\n      });\n      leaveDetail(this.businessId).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this.form = data.data;\n        }\n      });\n    },\n    handleAgree: function handleAgree() {\n      var _this2 = this;\n\n      if (!this.form.comment) {\n        this.$message.warning('请先填写批复意见');\n        return;\n      }\n\n      var params = {\n        taskId: this.taskId,\n        processInstanceId: this.processInstanceId,\n        flag: 'ok',\n        comment: this.form.comment\n      };\n      completeTask(params).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this2.$message.success(data.msg);\n\n          _this2.$router.$avueRouter.closeTag();\n\n          _this2.$router.push({\n            path: \"/work/start\"\n          });\n        } else {\n          _this2.$message.error(data.msg || '提交失败');\n        }\n      });\n    },\n    handleDisagree: function handleDisagree() {\n      var _this3 = this;\n\n      if (!this.form.comment) {\n        this.$message.warning('请先填写批复意见');\n        return;\n      }\n\n      var params = {\n        taskId: this.taskId,\n        processInstanceId: this.processInstanceId,\n        comment: this.form.comment\n      };\n      completeTask(params).then(function (res) {\n        var data = res.data;\n\n        if (data.success) {\n          _this3.$message.success(data.msg);\n\n          _this3.$router.$avueRouter.closeTag();\n\n          _this3.$router.push({\n            path: \"/work/start\"\n          });\n        } else {\n          _this3.$message.error(data.msg || '提交失败');\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.$router.$avueRouter.closeTag();\n      this.$router.push({\n        path: \"/work/start\"\n      });\n    }\n  }\n};",{"version":3,"sources":["handle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n      <el-row type=\"flex\" class=\"row-bg\" justify=\"end\">\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleAgree\">同意</el-button>\r\n          <el-button type=\"danger\" @click=\"handleDisagree\">驳回</el-button>\r\n          <el-button @click=\"handleCancel\">关闭</el-button>\r\n        </el-form-item>\r\n      </el-row>\r\n      <el-card shadow=\"hover\">\r\n        <div slot=\"header\">\r\n          <span>审批信息</span>\r\n        </div>\r\n        <el-form-item label=\"申请人\">\r\n          <el-input :disabled=\"true\" v-model=\"form.flow.assigneeName\"/>\r\n        </el-form-item>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"开始时间\">\r\n              <el-input :disabled=\"true\" v-model=\"form.startTime\"/>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"结束时间\">\r\n              <el-input :disabled=\"true\" v-model=\"form.endTime\"/>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-form-item label=\"请假理由\">\r\n          <el-input :disabled=\"true\" type=\"textarea\" v-model=\"form.reason\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"批复意见\">\r\n          <el-input type=\"textarea\" v-model=\"form.comment\"/>\r\n        </el-form-item>\r\n      </el-card>\r\n      <el-card shadow=\"hover\">\r\n        <div slot=\"header\">\r\n          <span>流程信息</span>\r\n        </div>\r\n        <el-row type=\"flex\" class=\"row-bg\">\r\n          <el-timeline>\r\n            <el-timeline-item :key=\"flow.id\" :timestamp=\"flow.createTime\" v-for=\"flow in flowList\" placement=\"top\">\r\n              <el-card shadow=\"hover\">\r\n                <p>{{flow.assigneeName}} 在 [{{flow.createTime}}] 开始处理 [{{flow.historyActivityName}}] 环节</p>\r\n                <p v-if=\"flow.historyActivityDurationTime!==''\">任务历时 [{{flow.historyActivityDurationTime}}]</p>\r\n                <p v-if=\"flow.comment!==''\">批复意见: [{{flow.comment}}]</p>\r\n                <p v-if=\"flow.endTime!==''\">结束时间: [{{flow.endTime}}]</p>\r\n              </el-card>\r\n            </el-timeline-item>\r\n          </el-timeline>\r\n        </el-row>\r\n      </el-card>\r\n      <el-card shadow=\"hover\">\r\n        <div slot=\"header\">\r\n          <span>流程跟踪</span>\r\n        </div>\r\n        <el-row type=\"flex\" class=\"row-bg\">\r\n          <img :src=\"src\" alt=\"design\">\r\n        </el-row>\r\n      </el-card>\r\n    </el-form>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {historyFlowList, leaveDetail} from \"@/api/work/process\";\r\n  import {completeTask} from \"@/api/work/work\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        taskId: '',\r\n        businessId: '',\r\n        processInstanceId: '',\r\n        src: '',\r\n        flowList: [],\r\n        form: {\r\n          flow: {\r\n            assigneeName: '',\r\n          },\r\n          startTime: '',\r\n          endTime: '',\r\n          reason: '',\r\n          comment: '',\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n      this.init();\r\n    },\r\n    beforeRouteUpdate(to, from, next) {\r\n      // 在当前路由改变，但是该组件被复用时调用\r\n      // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候\r\n      // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用\r\n      // 可以访问组件实例 `this`\r\n      if (to.fullPath !== from.fullPath) {\r\n        next();\r\n        this.init();\r\n      }\r\n    },\r\n    methods: {\r\n      init() {\r\n        this.taskId = this.$route.params.taskId;\r\n        this.processInstanceId = this.$route.params.processInstanceId;\r\n        this.businessId = this.$route.params.businessId;\r\n        this.src = `/api/blade-flow/process/diagram-view?processInstanceId=${this.$route.params.processInstanceId}`;\r\n        historyFlowList(this.processInstanceId).then(res => {\r\n          const data = res.data;\r\n          if (data.success) {\r\n            this.flowList = data.data;\r\n          }\r\n        })\r\n        leaveDetail(this.businessId).then(res => {\r\n          const data = res.data;\r\n          if (data.success) {\r\n            this.form = data.data;\r\n          }\r\n        })\r\n      },\r\n      handleAgree() {\r\n        if (!this.form.comment) {\r\n          this.$message.warning('请先填写批复意见');\r\n          return;\r\n        }\r\n        const params = {\r\n          taskId: this.taskId,\r\n          processInstanceId: this.processInstanceId,\r\n          flag: 'ok',\r\n          comment: this.form.comment,\r\n        };\r\n        completeTask(params).then(res => {\r\n          const data = res.data;\r\n          if (data.success) {\r\n            this.$message.success(data.msg);\r\n            this.$router.$avueRouter.closeTag();\r\n            this.$router.push({path: `/work/start`});\r\n          } else {\r\n            this.$message.error(data.msg || '提交失败');\r\n          }\r\n        })\r\n      },\r\n      handleDisagree() {\r\n        if (!this.form.comment) {\r\n          this.$message.warning('请先填写批复意见');\r\n          return;\r\n        }\r\n        const params = {\r\n          taskId: this.taskId,\r\n          processInstanceId: this.processInstanceId,\r\n          comment: this.form.comment,\r\n        };\r\n        completeTask(params).then(res => {\r\n          const data = res.data;\r\n          if (data.success) {\r\n            this.$message.success(data.msg);\r\n            this.$router.$avueRouter.closeTag();\r\n            this.$router.push({path: `/work/start`});\r\n          } else {\r\n            this.$message.error(data.msg || '提交失败');\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.$router.$avueRouter.closeTag();\r\n        this.$router.push({path: `/work/start`});\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/work/process/leave"}]}